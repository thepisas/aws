{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc6057bd06": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.193.32.0/19",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "EDH-TCO-NONPROD"
          }
        ]
      }
    },
    "subnet05ad1c28": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.41.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DEV-EDH-TCO-EMR-AZ1"
          }
        ]
      }
    },
    "subnet703b5b39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.38.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TEST-EDH-TCO-TAB-AZ2"
          }
        ]
      }
    },
    "subnet0aad1c27": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.49.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-EMR-AZ1"
          }
        ]
      }
    },
    "subnet31ad1c1c": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.35.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DEV-EDH-TCO-INF-DB-AZ1"
          }
        ]
      }
    },
    "subneta28feef9": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.52.0/24",
        "AvailabilityZone": "us-east-1d",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NONPROD-TCO-PUB-AZ2"
          }
        ]
      }
    },
    "subnet7c3b5b35": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.46.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-TAB-AZ2"
          }
        ]
      }
    },
    "subnet34febe19": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.53.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-INF-FE-AZ1"
          }
        ]
      }
    },
    "subnetf1ceffb8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.54.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-INF-FE-AZ2"
          }
        ]
      }
    },
    "subnet713b5b38": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.42.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TEST-EDH-TCO-EMR-AZ2"
          }
        ]
      }
    },
    "subnet0bad1c26": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.33.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DEV-EDH-TCO-INF-FE-AZ1"
          }
        ]
      }
    },
    "subnet32ad1c1f": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.37.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DEV-EDH-TCO-TAB-AZ1"
          }
        ]
      }
    },
    "subnet0cad1c21": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.39.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DEV-EDH-TCO-RSHIFT-AZ1"
          }
        ]
      }
    },
    "subnet733b5b3a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.50.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-EMR-AZ2"
          }
        ]
      }
    },
    "subnet7e3b5b37": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.36.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TEST-EDH-TCO-INF-DB-AZ2"
          }
        ]
      }
    },
    "subnet30ad1c1d": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.32.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "public"
          }
        ]
      }
    },
    "subnet33ad1c1e": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.43.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-INF-DB-AZ1"
          }
        ]
      }
    },
    "subnet7a3b5b33": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.44.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-INF-DB-AZ2"
          }
        ]
      }
    },
    "subnet723b5b3b": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.34.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TEST-EDH-TCO-INF-FE-AZ2"
          }
        ]
      }
    },
    "subnet0dad1c20": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.47.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-RSHIFT-AZ1"
          }
        ]
      }
    },
    "subnet7d3b5b34": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.40.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TEST-EDH-TCO-RSHIFT-AZ2"
          }
        ]
      }
    },
    "subnetf1bed6dc": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.51.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NONPROD-TCO-PUB-AZ1"
          }
        ]
      }
    },
    "subnet09ad1c24": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.45.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-TAB-AZ1"
          }
        ]
      }
    },
    "subnet753b5b3c": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.193.48.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "QA-EDH-TCO-RSHIFT-AZ2"
          }
        ]
      }
    },
    "igw9de15cfa": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "cgwf357bf9a": {
      "Type": "AWS::EC2::CustomerGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "PA1"
          }
        ],
        "Type": "ipsec.1",
        "IpAddress": "34.224.144.110",
        "BgpAsn": "65000"
      }
    },
    "cgwb553bbdc": {
      "Type": "AWS::EC2::CustomerGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "PA"
          }
        ],
        "Type": "ipsec.1",
        "IpAddress": "34.224.225.233",
        "BgpAsn": "65000"
      }
    },
    "vgw065cb46f": {
      "Type": "AWS::EC2::VPNGateway",
      "Properties": {
        "Type": "ipsec.1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NON-PROD-VPG"
          }
        ]
      }
    },
    "dopt22d83d45": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "vpn6eb0a00f": {
      "Type": "AWS::EC2::VPNConnection",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TRANSIT_VPN1"
          }
        ],
        "Type": "ipsec.1",
        "StaticRoutesOnly": "true",
        "VpnGatewayId": {
          "Ref": "vgw065cb46f"
        },
        "CustomerGatewayId": {
          "Ref": "cgwf357bf9a"
        }
      }
    },
    "vpn898b9be8": {
      "Type": "AWS::EC2::VPNConnection",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TRANSIT_VPN"
          }
        ],
        "Type": "ipsec.1",
        "StaticRoutesOnly": "true",
        "VpnGatewayId": {
          "Ref": "vgw065cb46f"
        },
        "CustomerGatewayId": {
          "Ref": "cgwb553bbdc"
        }
      }
    },
    "pcxee8a1087": {
      "Type": "AWS::EC2::VPCPeeringConnection",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MGMT-TCO to EDH-TCO-NONPROD"
          }
        ],
        "VpcId": "vpc-97b4f2f1",
        "PeerVpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "aclfbd0659d": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "rtbee84dc88": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ECH-TCO-NONPROD-private"
          }
        ]
      }
    },
    "rtbe384dc85": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "rtbef84dc89": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ECH-TCO-NONPROD-public"
          }
        ]
      }
    },
    "rtb91af39e9": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MGMT-TRANSIT-TCO to EDH-TCO-NONPROD"
          }
        ]
      }
    },
    "eip3419214162": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "eip3419217158": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "eip3419268213": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "eip341939078": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": [
        "gw1",
        "gw2"
      ],
      "Properties": {
        "Domain": "vpc"
      }
    },
    "eip34195135135": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": [
        "gw1",
        "gw2"
      ],
      "Properties": {
        "Domain": "vpc"
      }
    },
    "eip3423717190": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": [
        "gw1",
        "gw2"
      ],
      "Properties": {
        "Domain": "vpc"
      }
    },
    "asgEC2ContainerServiceamzecsposrfdevEcsInstanceAsg117KSGIJAHOZ3": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "us-east-1b"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "0",
        "HealthCheckType": "EC2",
        "MaxSize": "1",
        "MinSize": "0",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet0bad1c26"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcEC2ContainerServiceamzecsposrfdevEcsInstanceLc1UO6XV6W1E7BY"
        },
        "Tags": [
          {
            "Key": "Description",
            "Value": "This instance is the part of the Auto Scaling group which was created through ECS Console",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "ECS Instance - EC2ContainerService-amzecs-posrf-dev",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "asgEC2ContainerServiceamzecsposrfqaEcsInstanceAsg1UVWJRFNNALWW": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "us-east-1c"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "0",
        "HealthCheckType": "EC2",
        "MaxSize": "1",
        "MinSize": "0",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnetf1ceffb8"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcEC2ContainerServiceamzecsposrfqaEcsInstanceLc1EHZFLMQORGWE"
        },
        "Tags": [
          {
            "Key": "Description",
            "Value": "This instance is the part of the Auto Scaling group which was created through ECS Console",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "ECS Instance - EC2ContainerService-amzecs-posrf-qa",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "asgEC2ContainerServiceecsdevEcsInstanceAsgXAJW7DNKP0G1": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "us-east-1b"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "0",
        "HealthCheckType": "EC2",
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet0bad1c26"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcECSDEVM5large04112018"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Description",
            "Value": "This instance is the part of the Auto Scaling group which was created through ECS Console",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "ECS Instance - EC2ContainerService-ecs-dev",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "asgEC2ContainerServiceecsqaEcsInstanceAsg1H741EASN2X6F": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "us-east-1b",
          "us-east-1c"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "0",
        "HealthCheckType": "EC2",
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet34febe19"
          },
          {
            "Ref": "subnetf1ceffb8"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcECSQAM5large"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Description",
            "Value": "This instance is the part of the Auto Scaling group which was created through ECS Console",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "ECS Instance - EC2ContainerService-ecs-qa",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "lcEC2ContainerServiceamzecsposrfdevEcsInstanceLc1UO6XV6W1E7BY": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-0254e5972ebcd132c",
        "InstanceType": "m5.large",
        "KeyName": "ECSRFDEV",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/ecsInstanceRole",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgKTDEVECSSG"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvdcz",
            "Ebs": {
              "VolumeSize": 40
            }
          }
        ]
      }
    },
    "lcEC2ContainerServiceamzecsposrfqaEcsInstanceLc1EHZFLMQORGWE": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-0254e5972ebcd132c",
        "InstanceType": "m5.large",
        "KeyName": "ECSRFQA",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/ecsInstanceRole",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgKTQAECSSG"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvdcz",
            "Ebs": {
              "VolumeSize": 40
            }
          }
        ]
      }
    },
    "lcEC2ContainerServiceecsqaEcsInstanceLc8VD957T5YPH5": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "ImageId": "ami-cb17d8b6",
        "InstanceType": "m4.large",
        "KeyName": "ECSRFQA",
        "IamInstanceProfile": "ecsInstanceRole",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgKTQAECSSG"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvdcz",
            "Ebs": {
              "VolumeSize": 22
            }
          }
        ]
      }
    },
    "lcECSDEVM5large": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-cb17d8b6",
        "InstanceType": "m5.large",
        "KeyName": "ECSRFDEV",
        "EbsOptimized": true,
        "IamInstanceProfile": "ecsInstanceRole",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgKTDEVECSSG"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvdcz",
            "Ebs": {
              "VolumeSize": 22
            }
          },
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "SnapshotId": "snap-09864da507166665b",
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "lcECSDEVM5large04112018": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-aff65ad2",
        "InstanceType": "m5.large",
        "KeyName": "ECSRFDEV",
        "EbsOptimized": true,
        "IamInstanceProfile": "ecsInstanceRole",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgKTDEVECSSG"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "SnapshotId": "snap-0888b555c45893ab1",
              "VolumeSize": 8
            }
          },
          {
            "DeviceName": "/dev/xvdcz",
            "Ebs": {
              "VolumeSize": 22
            }
          }
        ]
      }
    },
    "lcECSQAM5large": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-cb17d8b6",
        "InstanceType": "m5.large",
        "KeyName": "ECSRFQA",
        "EbsOptimized": true,
        "IamInstanceProfile": "ecsInstanceRole",
        "InstanceMonitoring": "true",
        "SecurityGroups": [
          {
            "Ref": "sgKTQAECSSG"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvdcz",
            "Ebs": {
              "VolumeSize": 22
            }
          },
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "SnapshotId": "snap-09864da507166665b",
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "instancei0786ce7aa2ba9b82b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-11e84107",
        "InstanceType": "r4.2xlarge",
        "KeyName": "EDH-TCO-TAB-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "OS",
            "Value": "Windows"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZASTBLQ01"
          }
        ],
        "Volumes": [
          {
            "Device": "xvdd",
            "VolumeId": {
              "Ref": "volumevol046e113c3eb6d6e1f"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet09ad1c24"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.45.120",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgTABLEAUNONPROD"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0a5d0979ec2c20829": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfDevRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.xlarge",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Name",
            "Value": "amzelsrfdev02"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-dev"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0aec0031246262013"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.53",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei07f887ba69afb754e": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfQaRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfqa01-core2"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol027de60e04f703fde"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.15",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0e7fe6ee00ce15c0a": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfQaRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfqa01-core4"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol049e24b044ddb4698"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.47",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0f0f77e32bec7dd66": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfQaRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfqa01-core6"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0e934aed18f94916d"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.31",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei09c342a74e3a606e3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfQaRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfqa01-core3"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol03d08887ac8b31156"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.38",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei05c966d852dcc5fe0": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfQaRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfqa01-core1"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0ebe4fc066320b9d4"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.220",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0e9d01fbb6af38f89": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfQaRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfqa01-core5"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0ff9fb409044d7199"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.176",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei09fb2faf60bd070ad": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-0a153f986bdb1163b",
        "InstanceType": "m4.large",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Tiffany&Co-EDH-NonProd--NexposeScannerInstance"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet30ad1c1d"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.32.232",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgNexposescanEngine"
              }
            ]
          }
        ]
      }
    },
    "instancei058d36c591e659017": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchdev_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m3.large",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Name",
            "Value": "amzlinelad01"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearch-dev"
          },
          {
            "Key": "Environment",
            "Value": "Dev"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0a49dcdaa7e09586d"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.70",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0ad4e7a4ca9526998": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfDevRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.large",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-dev"
          },
          {
            "Key": "Name",
            "Value": "amzkibrfdev01"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol09366065377c9c644"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.167",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei07610d6df10c839f8": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.2xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01-MASTER"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0a779801d2e3e72f8"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol087491e9894440cc1"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.129",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceMasterPrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei015e65f7ded1aa067": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01-CORE1"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0fbc0290219f8c345"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.208",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei02af9dec43c5b6f5f": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01-CORE2"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol05a64077fc2976edf"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.147",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei08fd3ce822b12e643": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01-CORE4"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol03e9c37a1f6815602"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.103",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0b1352c5cac0b6fb7": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01-CORE5"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol095766fbc3b39c0c2"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.54",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0de602dd96ad2aebb": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01-CORE6"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol010187bef54942d35"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.102",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei062104de2b77993ca": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01-CORE3"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol02dc2860e7a09a562"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.8",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0ba9f7a019bf28e77": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchqa_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m4.xlarge",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzlinelaq03"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearch-qa"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol041bb808a1efa1da3"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.139",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "instancei0b6e58ac4830fcffa": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-81a0a497",
        "InstanceType": "m3.large",
        "KeyName": "DP-MGMT",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "Datapipe"
          },
          {
            "Key": "Name",
            "Value": "EDH-TCO-NONPROD-VPC-FORTIGATE"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0e445cab38ac76563"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnetf1bed6dc"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.51.182",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgVYATTA"
              }
            ]
          }
        ]
      }
    },
    "instancei0b090c22e916af29e": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-11e84107",
        "InstanceType": "r4.2xlarge",
        "KeyName": "EDH-TCO-TAB-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "OS",
            "Value": "Windows"
          },
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "Name",
            "Value": "AMZASTBLD01"
          }
        ],
        "Volumes": [
          {
            "Device": "xvdd",
            "VolumeId": {
              "Ref": "volumevol0434b4d712d2d9146"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet32ad1c1f"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.37.36",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgTABLEAUNONPROD"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei05d804aa499da9114": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EC2_S3Access",
        "ImageId": "ami-ea0cfbfc",
        "InstanceType": "m4.2xlarge",
        "KeyName": "EDH-TCO-INF",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZLINEDHD01"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0d220dffe16fffc65"
            }
          },
          {
            "Device": "/dev/sdf",
            "VolumeId": {
              "Ref": "volumevol05322a61fe1bc7933"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.101",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgSGCHG0114418"
              },
              {
                "Ref": "sgdefault"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0cea3d730bf8838bd": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfDevRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.xlarge",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Name",
            "Value": "amzelsrfdev03"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-dev"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Environment",
            "Value": "dev"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol084cf179fb671a526"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.173",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0c5214cd68dde87b8": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/AMZLINEDHQ01_S3_Access",
        "ImageId": "ami-25ed2033",
        "InstanceType": "m4.2xlarge",
        "KeyName": "EDH-TCO-INF-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Name",
            "Value": "AMZLINEDHQ01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0d88071e8bffbfda0"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol08be8ce4570fd8f29"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.101",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgSGCHG0114418"
              },
              {
                "Ref": "sgdefault"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0164442eb3078f379": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchdev_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m3.large",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearch-dev"
          },
          {
            "Key": "Name",
            "Value": "amzlinkibd01"
          },
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol017ad9b2abebeb4c1"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.66",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei07b1e11e336226bac": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfDevRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.2xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzemrrfdev01-master1"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0b2fbfb122869c5ce"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol0ded5ce3058bfd61c"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.154",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceMasterPrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei03678e1585527ca97": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/amzlinsasd01_role",
        "ImageId": "ami-9e2f0988",
        "InstanceType": "r4.xlarge",
        "KeyName": "SASPOC",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "POC"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Name",
            "Value": "AMZLINSASD02"
          },
          {
            "Key": "Application",
            "Value": "SAS"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdf",
            "VolumeId": {
              "Ref": "volumevol00348365ff8ecfa1e"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.189",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgsaspocsg1"
              },
              {
                "Ref": "sgSASPOCSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei08d9b37da91dfee29": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/amzlinsasd01_role",
        "ImageId": "ami-9e2f0988",
        "InstanceType": "i3.2xlarge",
        "KeyName": "SASPOC",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "POC"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Name",
            "Value": "AMZLINSASD01"
          },
          {
            "Key": "Application",
            "Value": "SAS"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdf",
            "VolumeId": {
              "Ref": "volumevol0bee2da3746e0b50e"
            }
          },
          {
            "Device": "/dev/sdg",
            "VolumeId": {
              "Ref": "volumevol00744bcb1cdee7afb"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.59",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgsaspocsg1"
              },
              {
                "Ref": "sgSASPOCSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei04e708879f5efc34a": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchqa_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m3.large",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Name",
            "Value": "amzlinelaq01"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearch-qa"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol04d4d5e7c0801a612"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.95",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "instancei073861006d7f7c1ed": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/sasdev_role",
        "ImageId": "ami-26ebbc5c",
        "InstanceType": "r4.xlarge",
        "KeyName": "SASDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "SAS"
          },
          {
            "Key": "Name",
            "Value": "amzlinsasd03"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdf",
            "VolumeId": {
              "Ref": "volumevol07ed4efd6311ed373"
            }
          },
          {
            "Device": "/dev/sdg",
            "VolumeId": {
              "Ref": "volumevol011eeec9ef0ba56f0"
            }
          },
          {
            "Device": "/dev/sdh",
            "VolumeId": {
              "Ref": "volumevol0db84fafb98fdd570"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.32",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgSASDEVSG"
              }
            ]
          }
        ]
      }
    },
    "instancei0f3ae2cae4a63df29": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/sasdev_role",
        "ImageId": "ami-26ebbc5c",
        "InstanceType": "r4.xlarge",
        "KeyName": "SASDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Name",
            "Value": "amzlinsasd04"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "SAS"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdf",
            "VolumeId": {
              "Ref": "volumevol083ec9e61ad4b092d"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.137",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgSASDEVSG"
              }
            ]
          }
        ]
      }
    },
    "instancei0742003b0e210d954": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfQaRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.large",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Name",
            "Value": "amzelsrfqa01"
          },
          {
            "Key": "Environment",
            "Value": "qa"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-qa"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0a04ddaa5554e99bf"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.131",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "instancei00320bff7f66a813a": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfDevRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzemrrfdev01-core1"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol05816014e6b381fbe"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol0ed9caa602f7d9211"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.56",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0037ae57352184524": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfDevRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfdev01-core2"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol05978a11189c49c9e"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol0cf7561d779acb7ae"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.101",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei02ef9239eb081271b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfDevRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfdev01-core3"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol008de8ebdc4800342"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol011f3fc57d52d7344"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.227",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei059295c55e09b9735": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-11e84107",
        "InstanceType": "r4.2xlarge",
        "KeyName": "EDH-TCO-TAB-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZASTBLQ02"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "OS",
            "Value": "Windows"
          }
        ],
        "Volumes": [
          {
            "Device": "xvdd",
            "VolumeId": {
              "Ref": "volumevol027b0db31aef7029f"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet09ad1c24"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.45.154",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgTABLEAUNONPROD"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0eddf255778187a2b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfQaRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.large",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-qa"
          },
          {
            "Key": "Environment",
            "Value": "qa"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Name",
            "Value": "amzkibrfqa01"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0d06482807ca2fe9c"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.211",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "instancei0d4f2f3c7f7aa51ee": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfQaRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.xlarge",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Environment",
            "Value": "qa"
          },
          {
            "Key": "Name",
            "Value": "amzelsrfqa02"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-qa"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol02874f647a0a88fb8"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.89",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "instancei0ee83c6f1baa92241": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchdev_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m4.xlarge",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzlinelad02"
          },
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearch-dev"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0d40242c0cfac1c01"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.83",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0902d71d996999193": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.2xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01-MASTER"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "False"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol08a2f9cc041637dd9"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.9",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceMasterPrivate"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0b23b17ea0e1ce17b": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchqa_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m4.xlarge",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Name",
            "Value": "amzlinelaq02"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearch-qa"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol07d86d2423e3ebd92"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.113",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "instancei002934fa48b036e52": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EmrEc2RfQaRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.2xlarge",
        "KeyName": "EDH-TCO-EMR-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzemrrfqa01-master"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0d8258d9af1636ea9"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet733b5b3a"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.50.214",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceMasterPrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei03973bbea05e558bb": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchdev_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m4.xlarge",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "clustername",
            "Value": "elasticsearch-dev"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "Name",
            "Value": "amzlinelad03"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0dd78afc37eb55d0c"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.191",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei01f1d11a95363322d": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2BdmRfDevRole",
        "ImageId": "ami-0ea49c4d86d419bb4",
        "InstanceType": "m5.2xlarge",
        "KeyName": "EDH-TCO-INF",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Environment",
            "Value": "dev"
          },
          {
            "Key": "Name",
            "Value": "amzbdmrfdev01"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol0c13f076d7cdef2b6"
            }
          },
          {
            "Device": "/dev/sdf",
            "VolumeId": {
              "Ref": "volumevol08d0a795faac8e9f3"
            }
          },
          {
            "Device": "/dev/sdg",
            "VolumeId": {
              "Ref": "volumevol0379938f760624c05"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.154",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgSGCHG0114418"
              },
              {
                "Ref": "sgdefault"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei036c6de909c217fa6": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId": "ami-11e84107",
        "InstanceType": "r4.2xlarge",
        "KeyName": "EDH-TCO-TAB-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Name",
            "Value": "AMZASTBLQ03"
          },
          {
            "Key": "OS",
            "Value": "Windows"
          }
        ],
        "Volumes": [
          {
            "Device": "xvdd",
            "VolumeId": {
              "Ref": "volumevol0da651599ec69a950"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet09ad1c24"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.45.77",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgTABLEAUNONPROD"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei06b9e29d1a87c2524": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfDevRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.large",
        "KeyName": "ELASTICDEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-dev"
          },
          {
            "Key": "Name",
            "Value": "amzelsrfdev01"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Environment",
            "Value": "dev"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0fe1f8e580dccfdee"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0bad1c26"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.33.224",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgELASTICDEVSG"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0e371192be9497f93": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-ce5b1fa4",
        "InstanceType": "m3.large",
        "KeyName": "DP-MGMT",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZLSMMONP01"
          },
          {
            "Key": "Name2",
            "Value": "EM7"
          },
          {
            "Key": "Application",
            "Value": "Datapipe"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol03e4bfa34ec781ffe"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": "subnet-b5be0f98",
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.192.11.193",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMGMTEM7EC2"
              },
              {
                "Ref": "sgDPMGMTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0d6edb087be56dee6": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2BdmRfQaRole",
        "ImageId": "ami-0ea49c4d86d419bb4",
        "InstanceType": "m5.2xlarge",
        "KeyName": "EDH-TCO-INF-QA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "qa"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "Name",
            "Value": "amzbdmrfqa01"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol010d92baaea75b768"
            }
          },
          {
            "Device": "/dev/sdf",
            "VolumeId": {
              "Ref": "volumevol0de7ef048bdfb7b86"
            }
          },
          {
            "Device": "/dev/sdg",
            "VolumeId": {
              "Ref": "volumevol04c2b2b8923a31710"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.70",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgDPMSSProtectedHosts"
              },
              {
                "Ref": "sgSGCHG0114418"
              },
              {
                "Ref": "sgdefault"
              },
              {
                "Ref": "sgAllowMGTEM7"
              }
            ]
          }
        ]
      }
    },
    "instancei0c52145c610b3a104": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01-CORE3"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol02e577fa770f3ad16"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol00fdd0f5973d08961"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.158",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei06fb652b283349297": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01-CORE1"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol0355dc0bc3d713073"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol01baa89b96a2352af"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.89",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei0057bba57b48b1fce": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "terminate",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/EMR_EC2_DefaultRole",
        "ImageId": "ami-c177e0d6",
        "InstanceType": "m4.4xlarge",
        "KeyName": "EDH-TCO-EMR-DEV",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01-CORE2"
          },
          {
            "Key": "OS",
            "Value": "AmazonLinux"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol07ed7f1ce9597d858"
            }
          },
          {
            "Device": "/dev/sdc",
            "VolumeId": {
              "Ref": "volumevol0b95193f370f35fe0"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet05ad1c28"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.41.253",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgElasticMapReduceSlavePrivate"
              }
            ]
          }
        ]
      }
    },
    "instancei08cc30de52a9f70a7": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/elasticsearchqa_role",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m3.large",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearch-qa"
          },
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Name",
            "Value": "amzlinkibq01"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol073ebeb8e4d6b43ae"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.207",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "instancei0f4d29a9768d6f5d3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "IamInstanceProfile": "arn:aws:iam::869052972610:instance-profile/Ec2ElsRfQaRole",
        "ImageId": "ami-0e524e75",
        "InstanceType": "m5.xlarge",
        "KeyName": "ELASTICQA",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Userlogin",
            "Value": "Yes"
          },
          {
            "Key": "Environment",
            "Value": "qa"
          },
          {
            "Key": "Name",
            "Value": "amzelsrfqa03"
          },
          {
            "Key": "clustername",
            "Value": "elasticsearchrf-qa"
          },
          {
            "Key": "Daily-Snapshot",
            "Value": "True"
          },
          {
            "Key": "Application",
            "Value": "RF2"
          },
          {
            "Key": "OS",
            "Value": "RedHatLinux"
          }
        ],
        "Volumes": [
          {
            "Device": "/dev/sdb",
            "VolumeId": {
              "Ref": "volumevol043d610051ea5ab60"
            }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet34febe19"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.193.53.237",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgAllowMGTEM7"
              },
              {
                "Ref": "sgELASTICQASG"
              }
            ]
          }
        ]
      }
    },
    "volumevol08a2f9cc041637dd9": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "256",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01"
          }
        ]
      }
    },
    "volumevol03e9c37a1f6815602": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol02dc2860e7a09a562": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01"
          }
        ]
      }
    },
    "volumevol0fbc0290219f8c345": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol095766fbc3b39c0c2": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01"
          }
        ]
      }
    },
    "volumevol010187bef54942d35": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol05a64077fc2976edf": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHQ01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol05bd8fa95efb4bcfa": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Encrypted": true,
        "Size": "22",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol063d064a246ec7bf9": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-074a0c73fee802046",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMI-TEST-TASK0178667"
          }
        ]
      }
    },
    "volumevol0af936b44895fe494": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-072a4370ff6d4f2bb",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMI-TEST-TASK0178667-2"
          }
        ]
      }
    },
    "volumevol0a9547c30ca098b7c": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Encrypted": true,
        "Size": "20",
        "SnapshotId": "snap-0ca6ba5de992d186c",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMI-TEST-TASK0178667-2"
          }
        ]
      }
    },
    "volumevol08e7801edc8feebc6": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "10",
        "SnapshotId": "snap-0efcad93fddfe7f82",
        "VolumeType": "gp2"
      }
    },
    "volumevol03d08887ac8b31156": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfqa01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0ebe4fc066320b9d4": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Name",
            "Value": " amzemrrfqa01"
          }
        ]
      }
    },
    "volumevol0e934aed18f94916d": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfqa01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0ff9fb409044d7199": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfqa01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol049e24b044ddb4698": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Name",
            "Value": " amzemrrfqa01"
          }
        ]
      }
    },
    "volumevol027de60e04f703fde": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfqa01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0d8258d9af1636ea9": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "256",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfqa01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol05809674d870dc769": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1c",
        "Size": "40",
        "VolumeType": "gp2"
      }
    },
    "volumevol03e4bfa34ec781ffe": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "60",
        "SnapshotId": "snap-2ec72fb8",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "Datapipe"
          }
        ]
      }
    },
    "volumevol0d220dffe16fffc65": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-0760bb6a1dcd79af5",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol05322a61fe1bc7933": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "1600",
        "VolumeType": "st1",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol08be8ce4570fd8f29": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "1600",
        "VolumeType": "st1",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol0d88071e8bffbfda0": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-bcabb30d",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol0434b4d712d2d9146": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZASTBLD01"
          },
          {
            "Key": "Environment",
            "Value": "Dev"
          }
        ]
      }
    },
    "volumevol046e113c3eb6d6e1f": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZASTBLQ01"
          }
        ]
      }
    },
    "volumevol027b0db31aef7029f": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Name",
            "Value": "AMZASTBLQ02"
          }
        ]
      }
    },
    "volumevol0da651599ec69a950": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "Name",
            "Value": "AMZASTBLQ03"
          }
        ]
      }
    },
    "volumevol0bee2da3746e0b50e": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "1536",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "SAS"
          },
          {
            "Key": "Name",
            "Value": "(amzlinsasd01) encrypted /sas"
          }
        ]
      }
    },
    "volumevol00348365ff8ecfa1e": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "(amzlinsasd02) encrypted /sas"
          },
          {
            "Key": "Application",
            "Value": "SAS"
          }
        ]
      }
    },
    "volumevol0a49dcdaa7e09586d": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Name",
            "Value": "amzlinelad01"
          }
        ]
      }
    },
    "volumevol017ad9b2abebeb4c1": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0d40242c0cfac1c01": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzlinelad02"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0dd78afc37eb55d0c": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzlinelad03"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol04d4d5e7c0801a612": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzlinelaq01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol07d86d2423e3ebd92": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol041bb808a1efa1da3": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol073ebeb8e4d6b43ae": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol00744bcb1cdee7afb": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "3072",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "SAS"
          },
          {
            "Key": "Name",
            "Value": "(amzlinsasd01) encrypted /sas"
          }
        ]
      }
    },
    "volumevol0e445cab38ac76563": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "30",
        "VolumeType": "standard",
        "Tags": [
          {
            "Key": "Application",
            "Value": "Datapipe"
          }
        ]
      }
    },
    "volumevol07ed4efd6311ed373": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "512",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "manualsnapshot",
            "Value": "true"
          },
          {
            "Key": "Application",
            "Value": "SAS"
          },
          {
            "Key": "Name",
            "Value": "amzlinsasd03 SASBin and SW Depot"
          }
        ]
      }
    },
    "volumevol011eeec9ef0ba56f0": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "512",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "SAS"
          },
          {
            "Key": "Name",
            "Value": "amzlinsasd03 saswork"
          }
        ]
      }
    },
    "volumevol0db84fafb98fdd570": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "512",
        "VolumeType": "st1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzlinsasd03 sasdata"
          },
          {
            "Key": "Application",
            "Value": "SAS"
          }
        ]
      }
    },
    "volumevol083ec9e61ad4b092d": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "512",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "amzlinsasd04 /sas"
          },
          {
            "Key": "Application",
            "Value": "SAS"
          }
        ]
      }
    },
    "volumevol0fbfe40620b831230": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "22",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol00fdd0f5973d08961": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol0b95193f370f35fe0": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol0a779801d2e3e72f8": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol07ed7f1ce9597d858": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          }
        ]
      }
    },
    "volumevol0355dc0bc3d713073": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          }
        ]
      }
    },
    "volumevol087491e9894440cc1": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "256",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          }
        ]
      }
    },
    "volumevol02e577fa770f3ad16": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          },
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          }
        ]
      }
    },
    "volumevol01baa89b96a2352af": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AMZEMREDHD01"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "volumevol08d9d863b83537247": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-072a4370ff6d4f2bb",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TEMP-AMI-Update-TASK0178667"
          }
        ]
      }
    },
    "volumevol0d4d294c005f50964": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "20",
        "SnapshotId": "snap-0ca6ba5de992d186c",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TEMP-AMI-Update-TASK0178667"
          }
        ]
      }
    },
    "volumevol0279850dcf3493a7c": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-0c2e3375a86d3b581",
        "VolumeType": "gp2"
      }
    },
    "volumevol0b2fbfb122869c5ce": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "256",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          }
        ]
      }
    },
    "volumevol05978a11189c49c9e": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          }
        ]
      }
    },
    "volumevol05816014e6b381fbe": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0ed9caa602f7d9211": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0cf7561d779acb7ae": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol0ded5ce3058bfd61c": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          }
        ]
      }
    },
    "volumevol011f3fc57d52d7344": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          },
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          }
        ]
      }
    },
    "volumevol008de8ebdc4800342": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "2000",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": " amzemrrfdev01"
          },
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "volumevol08cb752793e0b0df1": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-0c2e3375a86d3b581",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CHG0172882"
          }
        ]
      }
    },
    "volumevol062375c0f9fd7bb8a": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-0c2e3375a86d3b581",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CHG0172882"
          }
        ]
      }
    },
    "volumevol0873e4a41723c03a9": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-0c2e3375a86d3b581",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "NAME",
            "Value": "CHG0172882"
          }
        ]
      }
    },
    "volumevol00f7a5948ee9d9f39": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "500",
        "SnapshotId": "snap-06c8381c21ecf2bfb",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CHG0172882"
          }
        ]
      }
    },
    "volumevol0fae69ea199470f8a": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "SnapshotId": "snap-048106801a19d6603",
        "VolumeType": "gp2"
      }
    },
    "volumevol0c13f076d7cdef2b6": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "1600",
        "VolumeType": "st1"
      }
    },
    "volumevol010d92baaea75b768": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "1600",
        "VolumeType": "st1"
      }
    },
    "volumevol0fe1f8e580dccfdee": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2"
      }
    },
    "volumevol0a04ddaa5554e99bf": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2"
      }
    },
    "volumevol084cf179fb671a526": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2"
      }
    },
    "volumevol0aec0031246262013": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2"
      }
    },
    "volumevol02874f647a0a88fb8": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2"
      }
    },
    "volumevol043d610051ea5ab60": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2"
      }
    },
    "volumevol0d06482807ca2fe9c": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2"
      }
    },
    "volumevol09366065377c9c644": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "50",
        "VolumeType": "gp2"
      }
    },
    "volumevol08d0a795faac8e9f3": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "bdmrfd01-app"
          }
        ]
      }
    },
    "volumevol0379938f760624c05": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "400",
        "VolumeType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "bdmrfd01-dat"
          }
        ]
      }
    },
    "volumevol06ae3f1aa2797ea94": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Size": "40",
        "VolumeType": "gp2"
      }
    },
    "volumevol04c2b2b8923a31710": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "100",
        "VolumeType": "gp2"
      }
    },
    "volumevol0de7ef048bdfb7b86": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "Encrypted": true,
        "Size": "400",
        "VolumeType": "gp2"
      }
    },
    "rdsamzdbedhd01": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "143",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "CharacterSetName": "AL32UTF8",
        "DBInstanceClass": "db.m4.large",
        "Port": "1521",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "35",
        "MasterUsername": "oracle",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "04:00-06:00",
        "PreferredMaintenanceWindow": "sun:07:00-sun:08:00",
        "DBName": "MyDatabase",
        "Engine": "oracle-se2",
        "EngineVersion": "12.1.0.2.v5",
        "LicenseModel": "license-included",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefaultvpc6057bd06"
        },
        "DBParameterGroupName": {
          "Ref": "dbpgoracl1parameter"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgTCONONPRODORA"
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "workload-type",
            "Value": "other"
          },
          {
            "Key": "DB_Engine",
            "Value": "Oracle"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "rdsamzdbedhd02": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "100",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.m4.large",
        "Port": "3306",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "7",
        "MasterUsername": "hive",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "09:43-10:13",
        "PreferredMaintenanceWindow": "tue:10:30-tue:11:00",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.7.16",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefaultvpc6057bd06"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgMySQLSG"
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "workload-type",
            "Value": "production"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "rdsamzdbedhq01": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "143",
        "AllowMajorVersionUpgrade": "false",
        "CharacterSetName": "AL32UTF8",
        "DBInstanceClass": "db.m4.large",
        "Port": "1521",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "35",
        "MasterUsername": "master",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "11:00-11:30",
        "PreferredMaintenanceWindow": "sun:07:00-sun:08:00",
        "DBName": "MyDatabase",
        "Engine": "oracle-se2",
        "EngineVersion": "12.1.0.2.v6",
        "LicenseModel": "license-included",
        "MultiAZ": "true",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetqaedhtcoinfdbaz1"
        },
        "DBParameterGroupName": {
          "Ref": "dbpgoracl1parameter"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgTCONONPRODQAORA"
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "workload-type",
            "Value": "other"
          },
          {
            "Key": "DB_Engine",
            "Value": "Oracle"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "rdsamzdbedhq02": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "100",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.m4.large",
        "Port": "3306",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "35",
        "MasterUsername": "hive",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "06:50-07:20",
        "PreferredMaintenanceWindow": "thu:08:57-thu:09:27",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.7.16",
        "LicenseModel": "general-public-license",
        "MultiAZ": "true",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetqaedhtcoinfdbaz1"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgMySQLSG"
          }
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "workload-type",
            "Value": "production"
          },
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "rdsamzmysrfdev01": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "100",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.m4.large",
        "Port": "3306",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "7",
        "MasterUsername": "hive",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "09:43-10:13",
        "PreferredMaintenanceWindow": "tue:10:30-tue:11:00",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.7.22",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefaultvpc6057bd06"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgMySQLSG"
          }
        ]
      }
    },
    "rdsamzmysrfqa01": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "100",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.m4.large",
        "Port": "3306",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "35",
        "MasterUsername": "hive",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "06:50-07:20",
        "PreferredMaintenanceWindow": "thu:08:57-thu:09:27",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.7.22",
        "LicenseModel": "general-public-license",
        "MultiAZ": "true",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetqaedhtcoinfdbaz1"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgMySQLSG"
          }
        ]
      }
    },
    "rdsamzorarfdev01": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "143",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "CharacterSetName": "AL32UTF8",
        "DBInstanceClass": "db.m4.large",
        "Port": "1521",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "35",
        "MasterUsername": "oracle",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "04:00-06:00",
        "PreferredMaintenanceWindow": "sun:07:00-sun:08:00",
        "DBName": "MyDatabase",
        "Engine": "oracle-se2",
        "EngineVersion": "12.1.0.2.v5",
        "LicenseModel": "license-included",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefaultvpc6057bd06"
        },
        "DBParameterGroupName": {
          "Ref": "dbpgoracl1parameter"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgTCONONPRODORA"
          }
        ],
        "Tags": [
          {
            "Key": "DB_Engine",
            "Value": "Oracle"
          },
          {
            "Key": "Apllication",
            "Value": "RF"
          },
          {
            "Key": "Environment",
            "Value": "Dev"
          },
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ]
      }
    },
    "rdsamzorarfqa01": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "143",
        "AllowMajorVersionUpgrade": "false",
        "CharacterSetName": "AL32UTF8",
        "DBInstanceClass": "db.m4.large",
        "Port": "1521",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "35",
        "MasterUsername": "master",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "11:00-11:30",
        "PreferredMaintenanceWindow": "sun:07:00-sun:08:00",
        "DBName": "MyDatabase",
        "Engine": "oracle-se2",
        "EngineVersion": "12.1.0.2.v6",
        "LicenseModel": "license-included",
        "MultiAZ": "true",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetqaedhtcoinfdbaz1"
        },
        "DBParameterGroupName": {
          "Ref": "dbpgoracl1parameter"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgTCONONPRODQAORA"
          }
        ],
        "Tags": [
          {
            "Key": "DB_Engine",
            "Value": "Oracle"
          },
          {
            "Key": "Apllication",
            "Value": "RF"
          },
          {
            "Key": "Environment",
            "Value": "QA"
          },
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ]
      }
    },
    "tableEmrFSMetadata": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "hashKey",
            "AttributeType": "S"
          },
          {
            "AttributeName": "rangeKey",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "hashKey",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "rangeKey",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "400",
          "WriteCapacityUnits": "100"
        }
      }
    },
    "tableSchedulerEBSSnapshotHistoryDaily": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "snapshot_id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "snapshot_id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "3",
          "WriteCapacityUnits": "3"
        }
      }
    },
    "tableSchedulerEBSSnapshotPolicyDaily": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "SolutionName",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "SolutionName",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "3",
          "WriteCapacityUnits": "3"
        }
      }
    },
    "s3amzs3adobeanalyticsdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs-dev"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "AdobeAnalytics"
          }
        ]
      }
    },
    "s3amzs3adobeanalyticsqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs-qa"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "AdobeAnalytics"
          }
        ]
      }
    },
    "s3amzs3adobeanalyticsrfdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs-dev"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "AdobeAnalytics"
          }
        ]
      }
    },
    "s3amzs3adobeanalyticsrfqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs-qa"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "AdobeAnalytics"
          }
        ]
      }
    },
    "s3amzs3edhdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3amzs3edhmessagingerrordev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingerrorqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingerrorrfdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingerrorrfqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingesrepositorydev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3amzs3edhmessagingesrepositoryqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingesrepositoryrfdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3amzs3edhmessagingesrepositoryrfqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrawdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrawqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrawrfdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrawrfqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrefineddev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrefinedqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrefinedrfdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhmessagingrefinedrfqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhnonprodlogs": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": "2555",
              "Id": "archive",
              "Prefix": "",
              "Status": "Enabled",
              "Transition": {
                "StorageClass": "Glacier",
                "TransitionInDays": "65"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Infrastructure"
          }
        ]
      }
    },
    "s3amzs3edhpkg": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3amzs3edhpoc": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "POC"
          }
        ]
      }
    },
    "s3amzs3edhqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3amzs3edhrfdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3amzs3edhrfqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3amzs3edhtricklepollrawdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhtricklepollrawqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhtricklepollrawrfdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/ecs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3edhtricklepollrawrfqa": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "RF"
          }
        ]
      }
    },
    "s3amzs3nonprodssm": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs/"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Infrastructure"
          }
        ]
      }
    },
    "s3amzs3sasbackupdev": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "transition_to_S3IA",
              "Status": "Enabled",
              "Transition": {
                "StorageClass": "STANDARD_IA",
                "TransitionInDays": "30"
              }
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "SAS"
          }
        ]
      }
    },
    "s3amztemp": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "temp"
          }
        ]
      }
    },
    "s3awslogs869052972610useast1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "EDH"
          }
        ]
      }
    },
    "s3cftemplates1l0un3upy1l31useast1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Infrastructure"
          }
        ]
      }
    },
    "s3datapipecloudtrail869052972610": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Datapipe"
          }
        ]
      }
    },
    "s3dpstate": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Datapipe"
          }
        ]
      }
    },
    "s3tiffanyandcompany": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "s3amzs3edhnonprodlogs"
          },
          "LogFilePrefix": "s3logs"
        },
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Infrastructure"
          }
        ]
      }
    },
    "dbsubnetdefaultvpc6057bd06": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Created from the RDS Management Console",
        "SubnetIds": [
          {
            "Ref": "subnet7a3b5b33"
          },
          {
            "Ref": "subnet0cad1c21"
          },
          {
            "Ref": "subnet723b5b3b"
          },
          {
            "Ref": "subnet05ad1c28"
          },
          {
            "Ref": "subnet713b5b38"
          },
          {
            "Ref": "subnet0dad1c20"
          },
          {
            "Ref": "subnet703b5b39"
          },
          {
            "Ref": "subnet733b5b3a"
          },
          {
            "Ref": "subnet7e3b5b37"
          },
          {
            "Ref": "subnet30ad1c1d"
          },
          {
            "Ref": "subnet7d3b5b34"
          },
          {
            "Ref": "subnet0aad1c27"
          },
          {
            "Ref": "subnet31ad1c1c"
          },
          {
            "Ref": "subnet33ad1c1e"
          },
          {
            "Ref": "subnet0bad1c26"
          },
          {
            "Ref": "subnet7c3b5b35"
          },
          {
            "Ref": "subnet32ad1c1f"
          },
          {
            "Ref": "subnet09ad1c24"
          },
          {
            "Ref": "subnet753b5b3c"
          }
        ]
      }
    },
    "dbsubnetqaedhtcoinfdbaz1": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet",
        "SubnetIds": [
          {
            "Ref": "subnet33ad1c1e"
          },
          {
            "Ref": "subnet7a3b5b33"
          }
        ]
      }
    },
    "dbpgoracl1parameter": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "ORACL1-PARAMETER",
        "Family": "oracle-se2-12.1",
        "Parameters": {
          "archive_lag_target": "300"
        }
      }
    },
    "clusubnetdevedhtcorshiftcsg": {
      "Type": "AWS::Redshift::ClusterSubnetGroup",
      "Properties": {
        "Description": "DEV-EDH-TCO-RSHIFT-CSG",
        "SubnetIds": [
          {
            "Ref": "subnet0cad1c21"
          }
        ]
      }
    },
    "clusubnetqaedhtcorshiftcsg": {
      "Type": "AWS::Redshift::ClusterSubnetGroup",
      "Properties": {
        "Description": "QA-EDH-TCO-RSHIFT-CSG",
        "SubnetIds": [
          {
            "Ref": "subnet0dad1c20"
          }
        ]
      }
    },
    "clusubnettestedhtcorshiftcsg": {
      "Type": "AWS::Redshift::ClusterSubnetGroup",
      "Properties": {
        "Description": "TEST-EDH-TCO-RSHIFT-CSG",
        "SubnetIds": [
          {
            "Ref": "subnet7d3b5b34"
          }
        ]
      }
    },
    "clupgwlmdev": {
      "Type": "AWS::Redshift::ClusterParameterGroup",
      "Properties": {
        "Description": "Dev Redshift Parameter Group",
        "ParameterGroupFamily": "redshift-1.0",
        "Parameters": [
          {
            "ParameterName": "datestyle",
            "ParameterValue": "ISO, MDY"
          },
          {
            "ParameterName": "enable_user_activity_logging",
            "ParameterValue": "false"
          },
          {
            "ParameterName": "extra_float_digits",
            "ParameterValue": "0"
          },
          {
            "ParameterName": "require_ssl",
            "ParameterValue": "false"
          },
          {
            "ParameterName": "search_path",
            "ParameterValue": "$user, public"
          },
          {
            "ParameterName": "statement_timeout",
            "ParameterValue": "0"
          },
          {
            "ParameterName": "use_fips_ssl",
            "ParameterValue": "false"
          },
          {
            "ParameterName": "wlm_json_configuration",
            "ParameterValue": "[{\"query_concurrency\":15,\"max_execution_time\":0,\"query_group\":[],\"query_group_wild_card\":0,\"user_group\":[],\"user_group_wild_card\":0},{\"short_query_queue\":true,\"max_execution_time\":5000}]"
          }
        ]
      }
    },
    "clupgwlmqa": {
      "Type": "AWS::Redshift::ClusterParameterGroup",
      "Properties": {
        "Description": "QA for Workload Management",
        "ParameterGroupFamily": "redshift-1.0",
        "Parameters": [
          {
            "ParameterName": "datestyle",
            "ParameterValue": "ISO, MDY"
          },
          {
            "ParameterName": "enable_user_activity_logging",
            "ParameterValue": "false"
          },
          {
            "ParameterName": "extra_float_digits",
            "ParameterValue": "0"
          },
          {
            "ParameterName": "require_ssl",
            "ParameterValue": "false"
          },
          {
            "ParameterName": "search_path",
            "ParameterValue": "$user, public"
          },
          {
            "ParameterName": "statement_timeout",
            "ParameterValue": "0"
          },
          {
            "ParameterName": "use_fips_ssl",
            "ParameterValue": "false"
          },
          {
            "ParameterName": "wlm_json_configuration",
            "ParameterValue": "[{\"query_concurrency\":15,\"max_execution_time\":0,\"query_group\":[],\"query_group_wild_card\":0,\"user_group\":[],\"user_group_wild_card\":0},{\"short_query_queue\":true,\"max_execution_time\":20000}]"
          }
        ]
      }
    },
    "queueAWSElasticMapReducej1XLXSJ2WF35US": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "86400",
        "ReceiveMessageWaitTimeSeconds": "10",
        "VisibilityTimeout": "30"
      }
    },
    "queueAWSElasticMapReducej28TS9SM4PRUXC": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "86400",
        "ReceiveMessageWaitTimeSeconds": "10",
        "VisibilityTimeout": "30"
      }
    },
    "queueAWSElasticMapReducej2NUUAX8ZYH2TQ": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "86400",
        "ReceiveMessageWaitTimeSeconds": "10",
        "VisibilityTimeout": "30"
      }
    },
    "queueAWSElasticMapReducej2XXZT8Y6H4PQ1": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "86400",
        "ReceiveMessageWaitTimeSeconds": "10",
        "VisibilityTimeout": "30"
      }
    },
    "queueoutcomesbucket10576771": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "345600",
        "ReceiveMessageWaitTimeSeconds": "0",
        "VisibilityTimeout": "30"
      }
    },
    "queueoutcomesbucketAlertLogic": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "345600",
        "ReceiveMessageWaitTimeSeconds": "0",
        "VisibilityTimeout": "30"
      }
    },
    "topicAWSConfigNonProd": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "AWS-Config-NonProd",
        "Subscription": [
          {
            "Endpoint": "bryan.zollo@tiffany.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "topicAlertLogic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "AlertLogic",
        "Subscription": [
          {
            "Endpoint": "arn:aws:sqs:us-east-1:869052972610:outcomesbucket-AlertLogic",
            "Protocol": "sqs"
          }
        ]
      }
    },
    "topicEDHDEVTriggerBatchProcess": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "EDH_DEV_Trigger_Batch_Process",
        "Subscription": [
          {
            "Endpoint": "arn:aws:lambda:us-east-1:869052972610:function:dev-edh-batch-s3-keys",
            "Protocol": "lambda"
          }
        ]
      }
    },
    "topicBatchProc": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "BatchProc",
        "Subscription": [
          {
            "Endpoint": "arn:aws:lambda:us-east-1:869052972610:function:rfqa-edh-batch-s3-keys",
            "Protocol": "lambda"
          }
        ]
      }
    },
    "topicNonProdHlh": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "NonProdHlh",
        "Subscription": [
          {
            "Endpoint": "anthony.fiore@tiffany.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "topicRootAccess": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "RootAccess",
        "Subscription": [
          {
            "Endpoint": "anthony.fiore@tiffany.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "topicSample": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "Sample"
      }
    },
    "topicamzrsrfd01defaultalarms": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "amzrsrfd01-default-alarms"
      }
    },
    "topicamzrsrfq01defaultalarms": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "amzrsrfq01-default-alarms"
      }
    },
    "topiccfpoc": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "cf-poc"
      }
    },
    "topicdevedhsnsposauditsupport": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "dev-edh-sns-pos-audit-support",
        "Subscription": [
          {
            "Endpoint": "Amey.Potnis@tiffany.com",
            "Protocol": "email"
          },
          {
            "Endpoint": "noel.anson@tiffany.com",
            "Protocol": "email"
          },
          {
            "Endpoint": "mylin.ackermann@tiffany.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "topicoutcomestopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "outcomestopic",
        "Subscription": [
          {
            "Endpoint": "arn:aws:sqs:us-east-1:869052972610:outcomesbucket-10576771",
            "Protocol": "sqs"
          }
        ]
      }
    },
    "topicqaedhsnsposauditsupport": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "qa-edh-sns-pos-audit-support"
      }
    },
    "topicECSNotice": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "ECS-Notice",
        "Subscription": [
          {
            "Endpoint": "jrsanders@us.ibm.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "topicUnProc": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "UnProc",
        "Subscription": [
          {
            "Endpoint": "jrsanders@us.ibm.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "sgKTQAECSSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Korea Trade ECS Tasks in QA",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "KT-QA-ECS-SG"
          }
        ]
      }
    },
    "sgpocWebServerSecurityGroup2BCU7H97T6KM": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTPS access via port 443",
        "VpcId": "vpc-0dfbe43a4ee27340b"
      }
    },
    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": "vpc-16668f70"
      }
    },
    "sgDPMSSInfrastructure": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DP-MSS-Infrastructure - e.g bastion host",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DP-MSS-Infrastructure"
          }
        ]
      }
    },
    "sgDPMGMTEM7EC2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Collector to Host Access",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DP-MGMT-EM7-EC2"
          }
        ]
      }
    },
    "sgDEVEDHTCORSHIFTSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DEV-EDH-TCO-RSHIFT-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "EDH-TCO-DEV-REDSHIFT"
          }
        ]
      }
    },
    "sgNexposeScanEngine": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for the Nexpose Scanner",
        "VpcId": "vpc-1544ae73"
      }
    },
    "sgTABLEAUNONPROD": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "TABLEAU-NONPROD",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TABLEAU-NONPROD"
          }
        ]
      }
    },
    "sgEDHNONPRODQAORA": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EDH-NONPROD-QA-ORA",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "EDH-NONPROD-QA-ORA"
          }
        ]
      }
    },
    "sgSASDEVSG1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Second Security Group for SAS Development Instances",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SAS-DEV-SG-1"
          }
        ]
      }
    },
    "sgFWValidation": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "FWValidation",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FWValidation"
          }
        ]
      }
    },
    "sgDPMGMTEM7": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DP-MGMT-EM7 (for em7 collector only) ",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DP-MGMT-EM7"
          }
        ]
      }
    },
    "sgWindowsInstanceSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enables WINRM and RDP Access",
        "VpcId": "vpc-1544ae73"
      }
    },
    "sgLinuxInstanceGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enables ssh Access",
        "VpcId": "vpc-1544ae73"
      }
    },
    "sgDatapipeAdminSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable datapipe admin access to servers",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "MGMT"
          },
          {
            "Key": "Automation",
            "Value": "created by terraform"
          }
        ]
      }
    },
    "sgKTDEVALBSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Korea Trade ALB in Dev",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "KT-DEV-ALB-SG"
          }
        ]
      }
    },
    "sgNexposescanEngine": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for Rapid7 VM Scan Engine (Pre-authorized) version 6.5.6 provided by Rapid7",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgTurbonomicPOC": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for Hybrid Cloud Management Platform version 6.0.6 provided by Turbonomic",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgVYATTA": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "VYATTA",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VYATTA-NONPROD-VPC"
          }
        ]
      }
    },
    "sgEMRSTRIIMPOCSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EMR-STRIIMPOC-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "EMR-STRIIMPOC-SG"
          }
        ]
      }
    },
    "sgKTDEVECSSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Korea Trade ECS Tasks in Dev",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "KT-DEV-ECS-SG"
          }
        ]
      }
    },
    "sgDPMSSIDS": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group needs to be applied to the IDS Appliance",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DP-MSS-IDS"
          }
        ]
      }
    },
    "sgELASTICDEVSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ELASTICDEV-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ELASTICDEV-SG"
          }
        ]
      }
    },
    "sgSTRIIMPOCEC2SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "STRIIMPOC-EC2-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "STRIIMPOC-EC2-SG"
          }
        ]
      }
    },
    "sgDevelopers": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Developers",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Developers"
          }
        ]
      }
    },
    "sgTCONONPRODTESTORA": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Test Oracle inbound",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TCO-NONPROD-TEST-ORA "
          }
        ]
      }
    },
    "sgSASPOCSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SAS-POC-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SAS-POC-SG"
          }
        ]
      }
    },
    "sgBrocade5400VirtualRouterFirewallVPNVSE67R11S3AutogenByAWSMP": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for Brocade 5400 Virtual Router/Firewall/VPN version VSE6.7R11S3 provided by Brocade",
        "VpcId": "vpc-1544ae73"
      }
    },
    "sgEMRAccess": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EMRAccess",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "EMRAccess"
          }
        ]
      }
    },
    "sgVYATTAMGMTVPC": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "VYATTA-MGMT-VPC",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "VYATTA-MGMT-VPC"
          }
        ]
      }
    },
    "sgGOLDENSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "GOLDEN-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgTCONONPRODQAORA": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "TCO-NONPROD-QA-ORA ",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TCO-NONPROD-QA-ORA"
          }
        ]
      }
    },
    "sgActiveDirectoryCommunication1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Port Access between AD Servers",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ActiveDirectoryCommunication-1"
          }
        ]
      }
    },
    "sgSGCHG0114418": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG-CHG0114418",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SG-CHG0114418"
          }
        ]
      }
    },
    "sgECSRFDEVSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ECSRFDEV-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ECSRFDEV-SG"
          }
        ]
      }
    },
    "sgActiveDirectoryCommunication3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Port Access between AD Servers",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ActiveDirectoryCommunication-3"
          }
        ]
      }
    },
    "sgktdev": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Korea Trade Develpment Instance",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "kt-dev"
          }
        ]
      }
    },
    "sgTCONONPRODORA": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EDH-TCO-NONPROD Oracle database sg",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TCO-NONPROD-ORA"
          }
        ]
      }
    },
    "sgDPMSSProtectedHosts": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DP-MSS-ProtectedHosts - for all client instances",
        "VpcId": "vpc-895bb1ef",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DP-MSS-ProtectedHosts"
          }
        ]
      }
    },
    "sgAllowMGTEM7": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow EM7 collector from MGT environment access",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Allow-MGT-EM7"
          }
        ]
      }
    },
    "sgEDHTCOQAREDSHIFT": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EDH-TCO-QA-REDSHIFT",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "EDH-TCO-QA-REDSHIFT"
          }
        ]
      }
    },
    "sgElasticMapReduceServiceAccess": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Service access group for Elastic MapReduce created on 2017-01-26T01:26:40.501Z",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgElasticMapReduceSlavePrivate": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Slave group for Elastic MapReduce created on 2017-01-26T01:26:40.501Z",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgECSRFDEVALBSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ECSRFDEV-ALB-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ECSRFDEV-ALB-SG"
          }
        ]
      }
    },
    "sgAMZASEDHD01SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for AMZASEDHD01 instance",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgActiveDirectoryCommunication2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Port Access between AD Servers",
        "VpcId": "vpc-1544ae73",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ActiveDirectoryCommunication-2"
          }
        ]
      }
    },
    "sgKTQAALBSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for Korea Trade ALB in QA",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "KT-QA-ALB-SG"
          }
        ]
      }
    },
    "sgECSRFQASG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ECSRFQA-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ECSRFQA-SG"
          }
        ]
      }
    },
    "sgECSRFQAALBSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Secuity Group for ALB to ECS QA Cluster",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ECSRFQA-ALB-SG"
          }
        ]
      }
    },
    "sgElasticMapReduceMasterPrivate": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Master group for Elastic MapReduce created on 2017-01-25T22:41:47.014Z",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgECSPOCSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ECS-POC-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgMySQLSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MySQLSG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        }
      }
    },
    "sgSASDEVSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group for SAS Development Servers",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SAS-DEV-SG"
          }
        ]
      }
    },
    "sgELASTICQASG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ELASTICQA-SG",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ELASTICQA-SG"
          }
        ]
      }
    },
    "sgEDHTCOTESTREDSHIFT": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Inbound to Redshift",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "EDH-TCO-TEST-REDSHIFT"
          }
        ]
      }
    },
    "sgsaspocsg1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Second Security Group for SAS POC Servers",
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SAS-POC-SG-1"
          }
        ]
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "sqspolicyoutcomesbucket10576771": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "queueoutcomesbucket10576771"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "arn:aws:sqs:us-east-1:869052972610:outcomesbucket-10576771/SQSDefaultPolicy",
          "Statement": [
            {
              "Sid": "AWSCloudTrailSQSPolicy20140328",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "SQS:SendMessage",
              "Resource": {
                "Fn::GetAtt": [
                  "queueoutcomesbucket10576771",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": "arn:aws:sns:us-east-1:869052972610:outcomestopic"
                }
              }
            }
          ]
        }
      }
    },
    "sqspolicyoutcomesbucketAlertLogic": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "queueoutcomesbucketAlertLogic"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "arn:aws:sqs:us-east-1:869052972610:outcomesbucket-AlertLogic/SQSDefaultPolicy",
          "Statement": [
            {
              "Sid": "Sid1485194210565",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "SQS:SendMessage",
              "Resource": {
                "Fn::GetAtt": [
                  "queueoutcomesbucketAlertLogic",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": "arn:aws:sns:us-east-1:869052972610:AlertLogic"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyAWSConfigNonProd": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicAWSConfigNonProd"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicAWSConfigNonProd"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyAlertLogic": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicAlertLogic"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicAlertLogic"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            },
            {
              "Sid": "AWSCloudTrailSNSPolicy20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "SNS:Publish",
              "Resource": {
                "Ref": "topicAlertLogic"
              }
            }
          ]
        }
      }
    },
    "snspolicyEDHDEVTriggerBatchProcess": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicEDHDEVTriggerBatchProcess"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicEDHDEVTriggerBatchProcess"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyBatchProc": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicBatchProc"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicBatchProc"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyNonProdHlh": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicNonProdHlh"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicNonProdHlh"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            },
            {
              "Sid": "AWSEvents_PersonalHealth_Id481510262935",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "sns:Publish",
              "Resource": {
                "Ref": "topicNonProdHlh"
              }
            }
          ]
        }
      }
    },
    "snspolicyRootAccess": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicRootAccess"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicRootAccess"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicySample": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicSample"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicSample"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyamzrsrfd01defaultalarms": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicamzrsrfd01defaultalarms"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicamzrsrfd01defaultalarms"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyamzrsrfq01defaultalarms": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicamzrsrfq01defaultalarms"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicamzrsrfq01defaultalarms"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicycfpoc": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topiccfpoc"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topiccfpoc"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            }
          ]
        }
      }
    },
    "snspolicydevedhsnsposauditsupport": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicdevedhsnsposauditsupport"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicdevedhsnsposauditsupport"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            },
            {
              "Sid": "example-statement-ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "SNS:Publish",
              "Resource": {
                "Ref": "topicdevedhsnsposauditsupport"
              },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    "arn:aws:s3:::amzs3edhmessagingerrordev",
                    "arn:aws:s3:::amzs3edhmessagingrawdev",
                    "arn:aws:s3:::amzs3edhmessagingrefineddev",
                    "arn:aws:s3:::amzs3edhtricklepollrawdev"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyoutcomestopic": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicoutcomestopic"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:DeleteTopic",
                "SNS:GetTopicAttributes",
                "SNS:Publish",
                "SNS:RemovePermission",
                "SNS:AddPermission",
                "SNS:Receive",
                "SNS:SetTopicAttributes"
              ],
              "Resource": {
                "Ref": "topicoutcomestopic"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            },
            {
              "Sid": "AWSCloudTrailSNSPolicy20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "SNS:Publish",
              "Resource": {
                "Ref": "topicoutcomestopic"
              }
            }
          ]
        }
      }
    },
    "snspolicyqaedhsnsposauditsupport": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicqaedhsnsposauditsupport"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicqaedhsnsposauditsupport"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            },
            {
              "Sid": "example-statement-ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "SNS:Publish",
              "Resource": {
                "Ref": "topicqaedhsnsposauditsupport"
              },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    "arn:aws:s3:::amzs3edhmessagingerrorqa",
                    "arn:aws:s3:::amzs3edhmessagingrawqa",
                    "arn:aws:s3:::amzs3edhmessagingrefinedqa",
                    "arn:aws:s3:::amzs3edhtricklepollrawqa"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyECSNotice": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicECSNotice"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicECSNotice"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            },
            {
              "Sid": "S3 privs to publish",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "SNS:Publish",
              "Resource": {
                "Ref": "topicECSNotice"
              },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    "arn:aws:s3:::amzs3edhmessagingerrorrfdev",
                    "arn:aws:s3:::amzs3edhmessagingrawrfdev",
                    "arn:aws:s3:::amzs3edhmessagingrefinedrfdev",
                    "arn:aws:s3:::amzs3edhtricklepollrawrfdev"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "snspolicyUnProc": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicUnProc"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicUnProc"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "869052972610"
                }
              }
            },
            {
              "Sid": "S3 publish privileges",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "SNS:Publish",
              "Resource": {
                "Ref": "topicUnProc"
              },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    "arn:aws:s3:::amzs3edhmessagingerrorrfqa",
                    "arn:aws:s3:::amzs3edhmessagingrawrfqa",
                    "arn:aws:s3:::amzs3edhmessagingrefinedrfqa",
                    "arn:aws:s3:::amzs3edhtricklepollrawrfqa"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "Full permissions for cross account access",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::276654360894:root"
              },
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhdev/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingerrordev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingerrordev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrordev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrordev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrordev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrordev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingerrorqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingerrorqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrorqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrorqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrorqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrorqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingerrorrfdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingerrorrfdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrorrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrorrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrorrfdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrorrfdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingerrorrfqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingerrorrfqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrorrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingerrorrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrorrfqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingerrorrfqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingesrepositorydev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingesrepositorydev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositorydev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositorydev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositorydev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositorydev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingesrepositoryqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingesrepositoryqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositoryqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositoryqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositoryqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositoryqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingesrepositoryrfdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingesrepositoryrfdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositoryrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositoryrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositoryrfdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositoryrfdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingesrepositoryrfqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingesrepositoryrfqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositoryrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingesrepositoryrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositoryrfqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingesrepositoryrfqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrawdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrawdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrawqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrawqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrawrfdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrawrfdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawrfdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawrfdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrawrfqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrawrfqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrawrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawrfqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrawrfqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrefineddev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrefineddev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefineddev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefineddev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefineddev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefineddev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrefinedqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrefinedqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefinedqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefinedqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefinedqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefinedqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrefinedrfdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrefinedrfdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefinedrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefinedrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefinedrfdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefinedrfdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhmessagingrefinedrfqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhmessagingrefinedrfqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefinedrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhmessagingrefinedrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefinedrfqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhmessagingrefinedrfqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhnonprodlogs": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhnonprodlogs"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AWSCloudTrailAclCheck20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:GetBucketAcl",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhnonprodlogs"
                  ]
                ]
              }
            },
            {
              "Sid": "AWSCloudTrailWrite20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhnonprodlogs/cloudtrail/AWSLogs/869052972610/*"
                  ]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhpkg": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhpkg"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "Full permissions for cross account access",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::276654360894:root"
              },
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhpkg"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhpkg/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhpkg/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhpkg/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Allow",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhpkg"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhpkg/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhpoc": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhpoc"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhpoc"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhpoc/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "Full permissions for cross account access",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::276654360894:root"
              },
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhqa/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhrfdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhrfdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhrfdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhrfdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhrfqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhrfqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhrfqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhrfqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhtricklepollrawdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhtricklepollrawdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhtricklepollrawqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhtricklepollrawqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhtricklepollrawrfdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhtricklepollrawrfdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawrfdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawrfdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawrfdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3edhtricklepollrawrfqa": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3edhtricklepollrawrfqa"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3edhtricklepollrawrfqa/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawrfqa"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3edhtricklepollrawrfqa/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3nonprodssm": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3nonprodssm"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3nonprodssm"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3nonprodssm/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policyamzs3sasbackupdev": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3amzs3sasbackupdev"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "PutObjPolicy",
          "Statement": [
            {
              "Sid": "Full permissions for cross account access",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::276654360894:root"
              },
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3sasbackupdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3sasbackupdev/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "DenyIncorrectEncryptionHeader",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3sasbackupdev/*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              }
            },
            {
              "Sid": "DenyUnEncryptedObjectUploads",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "amzs",
                    "3sasbackupdev/*"
                  ]
                ]
              },
              "Condition": {
                "Null": {
                  "s3:x-amz-server-side-encryption": "true"
                }
              }
            },
            {
              "Sid": "Access-to-specific-VPCE-only",
              "Effect": "Deny",
              "Principal": "*",
              "Action": [
                "s3:GetObject*",
                "s3:PutObject*",
                "s3:DeleteObject*"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3sasbackupdev"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      "amzs",
                      "3sasbackupdev/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "StringNotEquals": {
                  "aws:sourceVpce": [
                    "vpce-15c7087c",
                    "vpce-f0834f99",
                    "vpce-8d72bae4"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "s3policydatapipecloudtrail869052972610": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3datapipecloudtrail869052972610"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "Stmt1462667984069",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::869052972610:role/Tiffany-AlertLogic-Role"
              },
              "Action": [
                "s3:GetObjectVersionAcl",
                "s3:GetObject",
                "s3:GetObjectAcl"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "datapipe-cloudtrail-",
                    "869052972610/AWSLogs/*"
                  ]
                ]
              }
            },
            {
              "Sid": "Stmt1462667997005",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::869052972610:role/Tiffany-AlertLogic-Role"
              },
              "Action": [
                "s3:ListBucket",
                "s3:GetBucket*"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "datapipe-cloudtrail-",
                    "869052972610"
                  ]
                ]
              }
            },
            {
              "Sid": "AWSCloudTrailAclCheck20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:GetBucketAcl",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "datapipe-cloudtrail-",
                    "869052972610"
                  ]
                ]
              }
            },
            {
              "Sid": "AWSCloudTrailWrite20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    "datapipe-cloudtrail-",
                    "869052972610/AWSLogs/869052972610/*"
                  ]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            }
          ]
        }
      }
    },
    "s3policytiffanyandcompany": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3tiffanyandcompany"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AWSCloudTrailAclCheck20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:GetBucketAcl",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "s3tiffanyandcompany"
                    },
                    ""
                  ]
                ]
              }
            },
            {
              "Sid": "AWSCloudTrailWrite20150319",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com"
              },
              "Action": "s3:PutObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "s3tiffanyandcompany"
                    },
                    "/AWSLogs/869052972610/*"
                  ]
                ]
              },
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            }
          ]
        }
      }
    },
    "alarmDEVElasticsearchClusterHealth": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "DEV-Elasticsearch-Cluster-Health",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "ClusterStatus.up",
        "Namespace": "ES/DEV/Stats",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "OKActions": [
          "arn:aws:sns:us-east-1:869052972610:dev-edh-sns-pos-audit-support",
          "arn:aws:sns:us-east-1:869052972610:EDH_DEV_Trigger_Batch_Process"
        ],
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:dev-edh-sns-pos-audit-support"
        ]
      }
    },
    "alarmQAElasticsearchCPUUtilization": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Elasticsearch-CPU-Utilization",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "2",
        "MetricName": "CPUUtilization",
        "Namespace": "ES/QA/Stats",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "85.0"
      }
    },
    "alarmQAElasticsearchClusterHealth": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Elasticsearch-Cluster-Health",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "ClusterStatus.up",
        "Namespace": "ES/QA/Stats",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "OKActions": [
          "arn:aws:sns:us-east-1:869052972610:EDH_QA_Trigger_Batch_Process",
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ]
      }
    },
    "alarmQALambdabatchs3keys": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-batch-s3-keys",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-messaging-elasticsearch-ingest"
          },
          {
            "Name": "Resource",
            "Value": "qa-edh-messaging-elasticsearch-ingest"
          }
        ]
      }
    },
    "alarmQALambdaedhdeletefromerrorindex": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-edh-delete-from-error-index",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-delete-from-error-index"
          }
        ]
      }
    },
    "alarmQALambdaedhdeleteoldindex": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-edh-delete-old-index",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-delete-old-index"
          },
          {
            "Name": "Resource",
            "Value": "qa-edh-delete-old-index"
          }
        ]
      }
    },
    "alarmQALambdaedhelasticsearchbulkupload": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-edh-elasticsearch-bulk-upload",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-elasticsearch-bulk-upload"
          }
        ]
      }
    },
    "alarmQALambdaedhnotificationunprocessedfile": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-edh-notification-unprocessed-file",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-notification-unprocessed-file"
          }
        ]
      }
    },
    "alarmQALambdaelasticsearchhealthcheck": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-elasticsearch-health-check",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-elasticsearch-health-check"
          },
          {
            "Name": "Resource",
            "Value": "qa-edh-elasticsearch-health-check"
          }
        ]
      }
    },
    "alarmQALambdaelasticsearchsnapshot": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-elasticsearch-snapshot",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-elasticsearch-snapshot"
          },
          {
            "Name": "Resource",
            "Value": "qa-edh-elasticsearch-snapshot"
          }
        ]
      }
    },
    "alarmQALambdamessagingelasticsearchingest": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-messaging-elasticsearch-ingest",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-messaging-elasticsearch-ingest"
          }
        ]
      }
    },
    "alarmQALambdatricklepollelasticsearchingest": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "QA-Lambda-tricklepoll-elasticsearch-ingest",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:qa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "qa-edh-tricklepoll-elasticsearch-ingest"
          },
          {
            "Name": "Resource",
            "Value": "qa-edh-tricklepoll-elasticsearch-ingest"
          }
        ]
      }
    },
    "alarmRFDEVElasticsearchCPUUtilization": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-Elasticsearch-CPU-Utilization",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "2",
        "MetricName": "CPUUtilization",
        "Namespace": "ES/RFDEV/Stats",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "85.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ]
      }
    },
    "alarmRFDEVElasticsearchClusterHealth": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-Elasticsearch-Cluster-Health",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "ClusterStatus.up",
        "Namespace": "ES/RFDEV/Stats",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "OKActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support",
          "arn:aws:sns:us-east-1:869052972610:EDH_RFDEV_Trigger_Batch_Process"
        ],
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ]
      }
    },
    "alarmRFDEVLambdaErroredhbatchs3keys": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-edh-batch-s3-keys",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-batch-s3-keys"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErroredhdeletefromerrorindex": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-edh-delete-from-error-index",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-delete-from-error-index"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErroredhdeleteoldindex": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-delete-old-index"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErroredhelasticsearchbulkupload": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-edh-elasticsearch-bulk-upload",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-elasticsearch-bulk-upload"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErroredhelasticsearchhealthcheck": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-edh-elasticsearch-health-check",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-elasticsearch-health-check"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErroredhelasticsearchsnapshot": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-edh-elasticsearch-snapshot",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-elasticsearch-snapshot"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErroredhnotificationunprocessedfile": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-edh-notification-unprocessed-file",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-notification-unprocessed-file"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErrormessagingelasticsearchingest": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-messaging-elasticsearch-ingest",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-messaging-elasticsearch-ingest"
          }
        ]
      }
    },
    "alarmRFDEVLambdaErrortricklepollelasticsearchingest": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFDEV-LambdaError-tricklepoll-elasticsearch-ingest",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfdev-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfdev-edh-tricklepoll-elasticsearch-ingest"
          }
        ]
      }
    },
    "alarmRFQAElasticsearchCPUUtilization": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-Elasticsearch-CPU-Utilization",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "2",
        "MetricName": "CPUUtilization",
        "Namespace": "ES/RFQA/Stats",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "85.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ]
      }
    },
    "alarmRFQAElasticsearchClusterHealth": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-Elasticsearch-Cluster-Health",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "ClusterStatus.up",
        "Namespace": "ES/RFQA/Stats",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "OKActions": [
          "arn:aws:sns:us-east-1:869052972610:EDH_RFQA_Trigger_Batch_Process",
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ]
      }
    },
    "alarmRFQALambdaErroredhbatchs3keys": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-edh-batch-s3-keys",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-batch-s3-keys"
          }
        ]
      }
    },
    "alarmRFQALambdaErroredhdeletefromerrorindex": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-edh-delete-from-error-index",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-delete-from-error-index"
          }
        ]
      }
    },
    "alarmRFQALambdaErroredhdeleteoldindex": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-edh-delete-old-index",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-delete-old-index"
          }
        ]
      }
    },
    "alarmRFQALambdaErroredhelasticsearchbulkupload": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-edh-elasticsearch-bulk-upload",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-elasticsearch-bulk-upload"
          }
        ]
      }
    },
    "alarmRFQALambdaErroredhelasticsearchhealthcheck": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-edh-elasticsearch-health-check",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-elasticsearch-health-check"
          }
        ]
      }
    },
    "alarmRFQALambdaErroredhelasticsearchsnapshot": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-edh-elasticsearch-snapshot",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-elasticsearch-snapshot"
          }
        ]
      }
    },
    "alarmRFQALambdaErroredhnotificationunprocessedfile": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-edh-notification-unprocessed-file",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-notification-unprocessed-file"
          }
        ]
      }
    },
    "alarmRFQALambdaErrormessagingelasticsearchingest": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-messaging-elasticsearch-ingest",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-messaging-elasticsearch-ingest"
          }
        ]
      }
    },
    "alarmRFQALambdaErrortricklepollelasticsearchingest": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "AlarmDescription": "RFQA-LambdaError-tricklepoll-elasticsearch-ingest",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:rfqa-edh-sns-pos-audit-support"
        ],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "rfqa-edh-tricklepoll-elasticsearch-ingest"
          }
        ]
      }
    },
    "alarmRootAccountUsage": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "RootAccountUsageCount",
        "Namespace": "CloudTrailMetrics",
        "Period": "300",
        "Statistic": "Sum",
        "Threshold": "1.0",
        "AlarmActions": [
          "arn:aws:sns:us-east-1:869052972610:RootAccess"
        ]
      }
    },
    "alarmTCOELB500Alarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "HTTPCode_ELB_5XX_Count",
        "Namespace": "AWS/ApplicationELB",
        "Period": "60",
        "Statistic": "Average",
        "Threshold": "10.0",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:fb10fbcb-abe7-43e2-9ac4-56767e48dbe5:resource/ecs/service/ecs-dev/rfdev-bucketstorageapi:policyName/ScaleOutPolicy",
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:2d17dba4-4209-44a7-bbdf-773ae7745db3:resource/ecs/service/amzecsrfdev-cluster/ecsrfdev-service:policyName/AStepPolicy"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "app/ecsrfdev/4c6266a36ef91e26"
          }
        ]
      }
    },
    "alarmTCOQAELB500Alarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": "2",
        "MetricName": "HTTPCode_ELB_5XX_Count",
        "Namespace": "AWS/ApplicationELB",
        "Period": "60",
        "Statistic": "Average",
        "Threshold": "10.0",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:bd027e00-cabe-43a7-b535-12ab75b6b7a1:resource/ecs/service/ecs-qa/rfqa-bucketstorageapi:policyName/ScaleOutPolicy",
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:2eff0704-2d5e-4b8f-8acd-d13770866c46:resource/ecs/service/amzecsrfqa-cluster/ecsrfqa-service:policyName/ScaleOutPolicy"
        ],
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": "app/ecsrfdev/4c6266a36ef91e26"
          }
        ]
      }
    },
    "alarmj1XLXSJ2WF35USig2JJ8T7VBHOD2KDefaultscaleinEMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "15000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:bafb210d-5a5e-4df3-a302-ab0460494e89:resource/elasticmapreduce/instancegroup/j-1XLXSJ2WF35US/ig-2JJ8T7VBHOD2K:policyName/instancegroup/j-1XLXSJ2WF35US/ig-2JJ8T7VBHOD2K_Default-scale-in_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-1XLXSJ2WF35US"
          }
        ]
      }
    },
    "alarmj1XLXSJ2WF35USig2JJ8T7VBHOD2KDefaultscaleout1EMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "5000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:bafb210d-5a5e-4df3-a302-ab0460494e89:resource/elasticmapreduce/instancegroup/j-1XLXSJ2WF35US/ig-2JJ8T7VBHOD2K:policyName/instancegroup/j-1XLXSJ2WF35US/ig-2JJ8T7VBHOD2K_Default-scale-out-1_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-1XLXSJ2WF35US"
          }
        ]
      }
    },
    "alarmj28TS9SM4PRUXCig25KPG3MUIFJ7ODefaultscaleinEMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "15000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:985a48b1-00b5-4b53-a5f0-69c033aebcdf:resource/elasticmapreduce/instancegroup/j-28TS9SM4PRUXC/ig-25KPG3MUIFJ7O:policyName/instancegroup/j-28TS9SM4PRUXC/ig-25KPG3MUIFJ7O_Default-scale-in_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-28TS9SM4PRUXC"
          }
        ]
      }
    },
    "alarmj28TS9SM4PRUXCig25KPG3MUIFJ7ODefaultscaleout1EMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "5000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:985a48b1-00b5-4b53-a5f0-69c033aebcdf:resource/elasticmapreduce/instancegroup/j-28TS9SM4PRUXC/ig-25KPG3MUIFJ7O:policyName/instancegroup/j-28TS9SM4PRUXC/ig-25KPG3MUIFJ7O_Default-scale-out-1_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-28TS9SM4PRUXC"
          }
        ]
      }
    },
    "alarmj2NUUAX8ZYH2TQig1FS14PN3PNF1DefaultscaleinEMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "15000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:2fc79c1a-f901-4621-988b-33664e4bb527:resource/elasticmapreduce/instancegroup/j-2NUUAX8ZYH2TQ/ig-1FS14PN3PNF1:policyName/instancegroup/j-2NUUAX8ZYH2TQ/ig-1FS14PN3PNF1_Default-scale-in_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-2NUUAX8ZYH2TQ"
          }
        ]
      }
    },
    "alarmj2NUUAX8ZYH2TQig1FS14PN3PNF1Defaultscaleout1EMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "5000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:2fc79c1a-f901-4621-988b-33664e4bb527:resource/elasticmapreduce/instancegroup/j-2NUUAX8ZYH2TQ/ig-1FS14PN3PNF1:policyName/instancegroup/j-2NUUAX8ZYH2TQ/ig-1FS14PN3PNF1_Default-scale-out-1_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-2NUUAX8ZYH2TQ"
          }
        ]
      }
    },
    "alarmj2XXZT8Y6H4PQ1igY5A5HXUUQ616DefaultscaleinEMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "15000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:b772fbe2-7e3d-4bc5-b4b3-0aab4077db13:resource/elasticmapreduce/instancegroup/j-2XXZT8Y6H4PQ1/ig-Y5A5HXUUQ616:policyName/instancegroup/j-2XXZT8Y6H4PQ1/ig-Y5A5HXUUQ616_Default-scale-in_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-2XXZT8Y6H4PQ1"
          }
        ]
      }
    },
    "alarmj2XXZT8Y6H4PQ1igY5A5HXUUQ616Defaultscaleout1EMRAutoScaling": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "MemoryAvailableMB",
        "Namespace": "AWS/ElasticMapReduce",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "5000.0",
        "Unit": "Count",
        "AlarmActions": [
          "arn:aws:autoscaling:us-east-1:869052972610:scalingPolicy:b772fbe2-7e3d-4bc5-b4b3-0aab4077db13:resource/elasticmapreduce/instancegroup/j-2XXZT8Y6H4PQ1/ig-Y5A5HXUUQ616:policyName/instancegroup/j-2XXZT8Y6H4PQ1/ig-Y5A5HXUUQ616_Default-scale-out-1_EMR_Auto_Scaling"
        ],
        "Dimensions": [
          {
            "Name": "JobFlowId",
            "Value": "j-2XXZT8Y6H4PQ1"
          }
        ]
      }
    },
    "alarmpercentagediskspaceuseddefault1zpj6ka0rge0": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "PercentageDiskSpaceUsed",
        "Namespace": "AWS/Redshift",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "80.0",
        "Dimensions": [
          {
            "Name": "ClusterIdentifier",
            "Value": "amzredrfqa01"
          }
        ]
      }
    },
    "trailEDHNonProd": {
      "Type": "AWS::CloudTrail::Trail",
      "Properties": {
        "IncludeGlobalServiceEvents": true,
        "IsLogging": "true",
        "S3KeyPrefix": "cloudtrail",
        "S3BucketName": {
          "Ref": "s3amzs3edhnonprodlogs"
        },
        "SnsTopicName": "arn:aws:sns:us-east-1:869052972610:outcomestopic"
      }
    },
    "traildatapipeproduction": {
      "Type": "AWS::CloudTrail::Trail",
      "Properties": {
        "IncludeGlobalServiceEvents": true,
        "IsLogging": "true",
        "S3BucketName": "dpcloudtrail-ingest"
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet05ad1c28"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet723b5b3b"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnetf1ceffb8"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet0dad1c20"
        }
      }
    },
    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet33ad1c1e"
        }
      }
    },
    "subnetacl6": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet0bad1c26"
        }
      }
    },
    "subnetacl7": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet0cad1c21"
        }
      }
    },
    "subnetacl8": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet7e3b5b37"
        }
      }
    },
    "subnetacl9": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet0aad1c27"
        }
      }
    },
    "subnetacl10": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet7a3b5b33"
        }
      }
    },
    "subnetacl11": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet753b5b3c"
        }
      }
    },
    "subnetacl12": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet703b5b39"
        }
      }
    },
    "subnetacl13": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet31ad1c1c"
        }
      }
    },
    "subnetacl14": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet733b5b3a"
        }
      }
    },
    "subnetacl15": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet30ad1c1d"
        }
      }
    },
    "subnetacl16": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet34febe19"
        }
      }
    },
    "subnetacl17": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet713b5b38"
        }
      }
    },
    "subnetacl18": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet7c3b5b35"
        }
      }
    },
    "subnetacl19": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet09ad1c24"
        }
      }
    },
    "subnetacl20": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet32ad1c1f"
        }
      }
    },
    "subnetacl21": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnet7d3b5b34"
        }
      }
    },
    "subnetacl22": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subnetf1bed6dc"
        }
      }
    },
    "subnetacl23": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfbd0659d"
        },
        "SubnetId": {
          "Ref": "subneta28feef9"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "InternetGatewayId": {
          "Ref": "igw9de15cfa"
        }
      }
    },
    "gw2": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "VpnGatewayId": {
          "Ref": "vgw065cb46f"
        }
      }
    },
    "subnetroute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet753b5b3c"
        }
      }
    },
    "subnetroute2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet713b5b38"
        }
      }
    },
    "subnetroute3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet32ad1c1f"
        }
      }
    },
    "subnetroute4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet0bad1c26"
        }
      }
    },
    "subnetroute5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet0cad1c21"
        }
      }
    },
    "subnetroute6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet0dad1c20"
        }
      }
    },
    "subnetroute7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet733b5b3a"
        }
      }
    },
    "subnetroute8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet7e3b5b37"
        }
      }
    },
    "subnetroute9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet05ad1c28"
        }
      }
    },
    "subnetroute10": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet33ad1c1e"
        }
      }
    },
    "subnetroute11": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet0aad1c27"
        }
      }
    },
    "subnetroute12": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet703b5b39"
        }
      }
    },
    "subnetroute13": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet7c3b5b35"
        }
      }
    },
    "subnetroute14": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet34febe19"
        }
      }
    },
    "subnetroute15": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet723b5b3b"
        }
      }
    },
    "subnetroute16": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet7a3b5b33"
        }
      }
    },
    "subnetroute17": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet09ad1c24"
        }
      }
    },
    "subnetroute18": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnetf1ceffb8"
        }
      }
    },
    "subnetroute19": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet31ad1c1c"
        }
      }
    },
    "subnetroute20": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "SubnetId": {
          "Ref": "subnet7d3b5b34"
        }
      }
    },
    "subnetroute22": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "SubnetId": {
          "Ref": "subnetf1bed6dc"
        }
      }
    },
    "subnetroute23": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "SubnetId": {
          "Ref": "subnet30ad1c1d"
        }
      }
    },
    "subnetroute24": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "SubnetId": {
          "Ref": "subneta28feef9"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.1.89.0/24",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "GatewayId": {
          "Ref": "vgw065cb46f"
        }
      },
      "DependsOn": "gw2"
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.30.0.0/16",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/16",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.160.0.0/16",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route5": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "VpcPeeringConnectionId": "pcx-ee8a1087",
        "DestinationCidrBlock": "10.192.0.0/16",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        }
      }
    },
    "route6": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.255.0.0/16",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route7": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.16.0.0/12",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route8": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        }
      }
    },
    "route9": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "GatewayId": "vpce-f0834f99"
      }
    },
    "route10": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.193.124.0/24",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "GatewayId": {
          "Ref": "vgw065cb46f"
        }
      },
      "DependsOn": "gw2"
    },
    "route11": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.0.0.0/8",
        "RouteTableId": {
          "Ref": "rtbee84dc88"
        },
        "GatewayId": {
          "Ref": "vgw065cb46f"
        }
      },
      "DependsOn": "gw2"
    },
    "route12": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.16.0.0/16",
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        },
        "NetworkInterfaceId": "eni-143ec7e4"
      }
    },
    "route13": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.18.0.0/16",
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        },
        "NetworkInterfaceId": "eni-143ec7e4"
      }
    },
    "route14": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/16",
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        },
        "NetworkInterfaceId": "eni-979b7874"
      }
    },
    "route15": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.160.0.0/16",
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        },
        "NetworkInterfaceId": "eni-143ec7e4"
      }
    },
    "route16": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "VpcPeeringConnectionId": "pcx-ee8a1087",
        "DestinationCidrBlock": "10.192.0.0/16",
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        }
      }
    },
    "route17": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.255.0.0/16",
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        },
        "NetworkInterfaceId": "eni-143ec7e4"
      }
    },
    "route18": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        }
      }
    },
    "route19": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbe384dc85"
        },
        "GatewayId": "vpce-f0834f99"
      }
    },
    "route20": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.30.0.0/16",
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route21": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/16",
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route22": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.160.0.0/16",
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route23": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.255.0.0/16",
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route24": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.16.0.0/12",
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "route25": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbef84dc89"
        },
        "GatewayId": {
          "Ref": "igw9de15cfa"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc6057bd06"
        },
        "DhcpOptionsId": {
          "Ref": "dopt22d83d45"
        }
      }
    },
    "assoc1": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "eip3423717190",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "instancei09fb2faf60bd070ad"
        }
      }
    },
    "assoc2": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "eip34195135135",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "instancei0b6e58ac4830fcffa"
        }
      }
    },
    "assoc3": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "eip341939078",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "instancei0e371192be9497f93"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAECSSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAECSSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgECSRFQASG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAECSSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgECSRFQAALBSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAECSSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgpocWebServerSecurityGroup2BCU7H97T6KM"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress9": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress10": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "10.192.11.103/32"
      }
    },
    "ingress11": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress12": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress13": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.193.51.11/32"
      }
    },
    "ingress14": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.193/32"
      }
    },
    "ingress15": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "202.168.209.40/32"
      }
    },
    "ingress16": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "217.72.241.183/32"
      }
    },
    "ingress17": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "63.131.154.55/32"
      }
    },
    "ingress18": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress19": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "66.70.1.47/32"
      }
    },
    "ingress20": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "66.70.104.94/32"
      }
    },
    "ingress21": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "72.36.244.8/32"
      }
    },
    "ingress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "202.168.209.204/32"
      }
    },
    "ingress23": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.201/32"
      }
    },
    "ingress24": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.222/32"
      }
    },
    "ingress25": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "64.106.131.160/28"
      }
    },
    "ingress26": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.125/32"
      }
    },
    "ingress27": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.126/32"
      }
    },
    "ingress28": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "7773",
        "ToPort": "7773",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress29": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "202.168.209.40/32"
      }
    },
    "ingress30": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "217.72.241.183/32"
      }
    },
    "ingress31": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "63.131.154.55/32"
      }
    },
    "ingress32": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress33": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "66.70.1.47/32"
      }
    },
    "ingress34": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "66.70.104.94/32"
      }
    },
    "ingress35": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress36": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress37": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "udp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "10.192.11.193/32"
      }
    },
    "ingress38": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "udp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "34.193.90.78/32"
      }
    },
    "ingress39": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "udp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "64.27.68.72/32"
      }
    },
    "ingress40": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "udp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "64.27.68.73/32"
      }
    },
    "ingress41": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "34.207.30.129/32"
      }
    },
    "ingress42": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "64.27.68.72/32"
      }
    },
    "ingress43": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "64.27.68.73/32"
      }
    },
    "ingress44": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "tcp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "10.192.11.193/32"
      }
    },
    "ingress45": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "tcp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "34.193.90.78/32"
      }
    },
    "ingress46": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "64.27.68.72/32"
      }
    },
    "ingress47": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "64.27.68.73/32"
      }
    },
    "ingress48": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress49": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress50": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.33.0/24"
      }
    },
    "ingress51": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.35.0/24"
      }
    },
    "ingress52": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.37.0/24"
      }
    },
    "ingress53": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.39.0/24"
      }
    },
    "ingress54": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.41.0/24"
      }
    },
    "ingress55": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress56": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress57": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress58": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress59": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "8060",
        "ToPort": "8060",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress60": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "8060",
        "ToPort": "8060",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress61": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress62": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress63": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress64": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress65": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress66": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress67": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress68": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress69": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHNONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.45.0/24"
      }
    },
    "ingress70": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHNONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.53.0/24"
      }
    },
    "ingress71": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG1"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress72": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress73": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.193.124.0/24"
      }
    },
    "ingress74": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "12.146.91.0/24"
      }
    },
    "ingress75": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "12.166.46.0/24"
      }
    },
    "ingress76": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress77": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "192.34.213.0/24"
      }
    },
    "ingress78": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "icmp",
        "FromPort": "0",
        "ToPort": "-1",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress79": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress80": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress81": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress82": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.193.124.0/24"
      }
    },
    "ingress83": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "12.146.91.0/24"
      }
    },
    "ingress84": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "12.166.46.0/24"
      }
    },
    "ingress85": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress86": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "192.34.213.0/24"
      }
    },
    "ingress87": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress88": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.193.124.0/24"
      }
    },
    "ingress89": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7707",
        "ToPort": "7707",
        "CidrIp": "64.27.28.20/32"
      }
    },
    "ingress90": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7707",
        "ToPort": "7707",
        "CidrIp": "64.27.68.72/32"
      }
    },
    "ingress91": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7707",
        "ToPort": "7707",
        "CidrIp": "64.27.68.73/32"
      }
    },
    "ingress92": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7707",
        "ToPort": "7707",
        "CidrIp": "64.27.68.74/32"
      }
    },
    "ingress93": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7700",
        "ToPort": "7700",
        "CidrIp": "202.168.209.40/32"
      }
    },
    "ingress94": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7700",
        "ToPort": "7700",
        "CidrIp": "217.72.241.183/32"
      }
    },
    "ingress95": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7700",
        "ToPort": "7700",
        "CidrIp": "217.72.241.40/32"
      }
    },
    "ingress96": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7700",
        "ToPort": "7700",
        "CidrIp": "63.131.154.55/32"
      }
    },
    "ingress97": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7700",
        "ToPort": "7700",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress98": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7700",
        "ToPort": "7700",
        "CidrIp": "66.70.1.47/32"
      }
    },
    "ingress99": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "7700",
        "ToPort": "7700",
        "CidrIp": "66.70.104.94/32"
      }
    },
    "ingress100": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress101": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress102": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "202.168.209.40/32"
      }
    },
    "ingress103": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "217.72.241.183/32"
      }
    },
    "ingress104": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "217.72.241.40/32"
      }
    },
    "ingress105": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "63.131.154.55/32"
      }
    },
    "ingress106": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress107": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "66.70.1.47/32"
      }
    },
    "ingress108": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "66.70.104.94/32"
      }
    },
    "ingress109": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress110": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgWindowsInstanceSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "3390",
        "ToPort": "3390",
        "SourceSecurityGroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress111": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgLinuxInstanceGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress112": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "192.247.174.254/32"
      }
    },
    "ingress113": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "202.168.209.40/32"
      }
    },
    "ingress114": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "217.72.241.183/32"
      }
    },
    "ingress115": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "217.72.241.40/32"
      }
    },
    "ingress116": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "63.131.154.55/32"
      }
    },
    "ingress117": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "63.145.108.167/32"
      }
    },
    "ingress118": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress119": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "64.106.131.254/32"
      }
    },
    "ingress120": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "64.27.66.28/32"
      }
    },
    "ingress121": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "66.70.1.47/32"
      }
    },
    "ingress122": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "66.70.104.94/32"
      }
    },
    "ingress123": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "66.70.118.230/32"
      }
    },
    "ingress124": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "72.233.41.98/32"
      }
    },
    "ingress125": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "72.36.244.8/32"
      }
    },
    "ingress126": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "202.168.209.204/32"
      }
    },
    "ingress127": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.201/32"
      }
    },
    "ingress128": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.222/32"
      }
    },
    "ingress129": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "64.106.131.160/28"
      }
    },
    "ingress130": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.125/32"
      }
    },
    "ingress131": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.126/32"
      }
    },
    "ingress132": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.192.11.39/32"
      }
    },
    "ingress133": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress134": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress135": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress136": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress137": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "SourceSecurityGroupId": {
          "Ref": "sgKTDEVECSSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress138": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress139": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress140": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress141": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTurbonomicPOC"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress142": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTurbonomicPOC"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress143": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "64.27.64.0/24"
      }
    },
    "ingress144": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "udp",
        "FromPort": "4500",
        "ToPort": "4500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress145": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "udp",
        "FromPort": "500",
        "ToPort": "500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress146": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress147": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress148": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress149": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress150": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress151": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVECSSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress152": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVECSSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgECSRFDEVALBSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress153": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVECSSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress154": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress155": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.12.21/32"
      }
    },
    "ingress156": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.32.0/19"
      }
    },
    "ingress157": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress158": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress159": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "192.168.0.0/16"
      }
    },
    "ingress160": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "64.27.64.0/24"
      }
    },
    "ingress161": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "tcp",
        "FromPort": "500",
        "ToPort": "500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress162": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "udp",
        "FromPort": "4500",
        "ToPort": "4500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress163": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "udp",
        "FromPort": "500",
        "ToPort": "500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress164": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress165": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress166": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "204.110.218.96/27"
      }
    },
    "ingress167": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "204.110.219.96/27"
      }
    },
    "ingress168": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "7777",
        "ToPort": "7777",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress169": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress170": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress171": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress172": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress173": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress174": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress175": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress176": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5601",
        "ToPort": "5601",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress177": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5601",
        "ToPort": "5601",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress178": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5601",
        "ToPort": "5601",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress179": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9300",
        "ToPort": "9300",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress180": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9300",
        "ToPort": "9300",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress181": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress182": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9200",
        "ToPort": "9200",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress183": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9200",
        "ToPort": "9200",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress184": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress185": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress186": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress187": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress188": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9080",
        "ToPort": "9081",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress189": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9080",
        "ToPort": "9081",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress190": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDevelopers"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "12.166.46.254/32"
      }
    },
    "ingress191": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDevelopers"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "192.34.213.12/32"
      }
    },
    "ingress192": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDevelopers"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "192.34.213.16/32"
      }
    },
    "ingress193": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress194": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.227/32"
      }
    },
    "ingress195": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress196": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.34.0/24"
      }
    },
    "ingress197": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.42.0/24"
      }
    },
    "ingress198": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress199": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress200": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "10021",
        "ToPort": "11099",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress201": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "10021",
        "ToPort": "11099",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress202": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "10021",
        "ToPort": "11099",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress203": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "21050",
        "ToPort": "21050",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress204": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "21050",
        "ToPort": "21050",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress205": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "21050",
        "ToPort": "21050",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress206": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5901",
        "ToPort": "5902",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress207": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5901",
        "ToPort": "5902",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress208": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5901",
        "ToPort": "5902",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress209": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6969",
        "ToPort": "7080",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress210": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6969",
        "ToPort": "7080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress211": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6969",
        "ToPort": "7080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress212": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8343",
        "ToPort": "8821",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress213": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8343",
        "ToPort": "8821",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress214": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8343",
        "ToPort": "8821",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress215": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9360",
        "ToPort": "9452",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress216": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9360",
        "ToPort": "9452",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress217": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9360",
        "ToPort": "9452",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress218": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7443",
        "ToPort": "7572",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress219": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7443",
        "ToPort": "7572",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress220": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7443",
        "ToPort": "7572",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress221": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress222": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress223": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "8561",
        "ToPort": "8561",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress224": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "8561",
        "ToPort": "8561",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress225": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7980",
        "ToPort": "8111",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress226": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7980",
        "ToPort": "8111",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress227": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7980",
        "ToPort": "8111",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress228": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgSASPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress229": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8561",
        "ToPort": "8561",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress230": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress231": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress232": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5660",
        "ToPort": "5660",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress233": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5660",
        "ToPort": "5660",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress234": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5660",
        "ToPort": "5660",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress235": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6051",
        "ToPort": "6051",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress236": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6051",
        "ToPort": "6051",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress237": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6051",
        "ToPort": "6051",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress238": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6001",
        "ToPort": "6002",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress239": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6001",
        "ToPort": "6002",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress240": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6001",
        "ToPort": "6002",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress241": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5451",
        "ToPort": "5451",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress242": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5451",
        "ToPort": "5451",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress243": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5451",
        "ToPort": "5451",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress244": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9832",
        "ToPort": "9832",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress245": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9832",
        "ToPort": "9832",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress246": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9832",
        "ToPort": "9832",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress247": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgBrocade5400VirtualRouterFirewallVPNVSE67R11S3AutogenByAWSMP"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress248": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgBrocade5400VirtualRouterFirewallVPNVSE67R11S3AutogenByAWSMP"
        },
        "IpProtocol": "udp",
        "FromPort": "4500",
        "ToPort": "4500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress249": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgBrocade5400VirtualRouterFirewallVPNVSE67R11S3AutogenByAWSMP"
        },
        "IpProtocol": "udp",
        "FromPort": "500",
        "ToPort": "500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress250": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgBrocade5400VirtualRouterFirewallVPNVSE67R11S3AutogenByAWSMP"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress251": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.255.180.0/22"
      }
    },
    "ingress252": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.255.180.0/32"
      }
    },
    "ingress253": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress254": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "9080",
        "ToPort": "9083",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress255": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "9080",
        "ToPort": "9083",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress256": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "18080",
        "ToPort": "18080",
        "CidrIp": "10.255.180.0/22"
      }
    },
    "ingress257": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "18080",
        "ToPort": "18080",
        "CidrIp": "10.255.180.0/32"
      }
    },
    "ingress258": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "18080",
        "ToPort": "18080",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress259": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.255.180.0/22"
      }
    },
    "ingress260": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.255.180.0/32"
      }
    },
    "ingress261": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress262": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "CidrIp": "10.192.11.103/32"
      }
    },
    "ingress263": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "50070",
        "ToPort": "50070",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress264": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "19888",
        "ToPort": "19888",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress265": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "19888",
        "ToPort": "19888",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress266": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "12300",
        "ToPort": "12600",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress267": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress268": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress269": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.33.101/32"
      }
    },
    "ingress270": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress271": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "-1",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress272": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.180.0/22"
      }
    },
    "ingress273": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.180.0/32"
      }
    },
    "ingress274": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress275": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "10000",
        "ToPort": "10000",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress276": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "10000",
        "ToPort": "10000",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress277": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "50070",
        "ToPort": "50075",
        "CidrIp": "10.255.180.0/22"
      }
    },
    "ingress278": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "50070",
        "ToPort": "50075",
        "CidrIp": "10.255.180.0/32"
      }
    },
    "ingress279": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "50070",
        "ToPort": "50075",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress280": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "8000",
        "ToPort": "8888",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress281": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "8000",
        "ToPort": "8888",
        "CidrIp": "10.255.180.0/22"
      }
    },
    "ingress282": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "8000",
        "ToPort": "8888",
        "CidrIp": "10.255.180.0/32"
      }
    },
    "ingress283": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "8000",
        "ToPort": "8888",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress284": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress285": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress286": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "-1",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress287": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "-1",
        "CidrIp": "172.18.0.0/16"
      }
    },
    "ingress288": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "-1",
        "CidrIp": "192.168.0.0/16"
      }
    },
    "ingress289": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "64.27.64.0/24"
      }
    },
    "ingress290": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "0",
        "CidrIp": "10.192.0.0/16"
      }
    },
    "ingress291": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "udp",
        "FromPort": "4500",
        "ToPort": "4500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress292": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "udp",
        "FromPort": "500",
        "ToPort": "500",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress293": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress294": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgGOLDENSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress295": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgGOLDENSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress296": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgGOLDENSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress297": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "SourceSecurityGroupId": {
          "Ref": "sgKTQAECSSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress298": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress299": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress300": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.39/32"
      }
    },
    "ingress301": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress302": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.45.0/24"
      }
    },
    "ingress303": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.50.0/24"
      }
    },
    "ingress304": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.53.0/24"
      }
    },
    "ingress305": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress306": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress307": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "49152",
        "ToPort": "65535",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress308": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "464",
        "ToPort": "464",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress309": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "1025",
        "ToPort": "5000",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress310": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "49152",
        "ToPort": "65535",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress311": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "389",
        "ToPort": "389",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress312": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress313": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress314": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "445",
        "ToPort": "445",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress315": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "25",
        "ToPort": "25",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress316": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "1025",
        "ToPort": "5000",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress317": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "139",
        "ToPort": "139",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress318": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "135",
        "ToPort": "135",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress319": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "3269",
        "ToPort": "3269",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress320": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress321": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "445",
        "ToPort": "445",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress322": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "138",
        "ToPort": "138",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress323": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "464",
        "ToPort": "464",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress324": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "5722",
        "ToPort": "5722",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress325": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "389",
        "ToPort": "389",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress326": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "2535",
        "ToPort": "2535",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress327": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "123",
        "ToPort": "123",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress328": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "9389",
        "ToPort": "9389",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress329": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "3268",
        "ToPort": "3268",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress330": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "88",
        "ToPort": "88",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress331": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "137",
        "ToPort": "137",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress332": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "tcp",
        "FromPort": "636",
        "ToPort": "636",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress333": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "67",
        "ToPort": "67",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress334": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "udp",
        "FromPort": "88",
        "ToPort": "88",
        "CidrIp": "10.192.15.11/32"
      }
    },
    "ingress335": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "7333",
        "ToPort": "7333",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress336": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "7333",
        "ToPort": "7333",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress337": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress338": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress339": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "6008",
        "ToPort": "6008",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress340": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "6008",
        "ToPort": "6008",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress341": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8085",
        "ToPort": "8085",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress342": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8085",
        "ToPort": "8085",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress343": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "7006",
        "ToPort": "7006",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress344": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "7006",
        "ToPort": "7006",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress345": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress346": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8084",
        "ToPort": "8084",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress347": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8084",
        "ToPort": "8084",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress348": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "10370",
        "ToPort": "10370",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress349": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "10370",
        "ToPort": "10370",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress350": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "7005",
        "ToPort": "7005",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress351": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "7005",
        "ToPort": "7005",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress352": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress353": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress354": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.29.0.0/16"
      }
    },
    "ingress355": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8095",
        "ToPort": "8095",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress356": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8095",
        "ToPort": "8095",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress357": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "6005",
        "ToPort": "6114",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress358": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "6005",
        "ToPort": "6114",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress359": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "6005",
        "ToPort": "6005",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress360": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "6005",
        "ToPort": "6005",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress361": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "10250",
        "ToPort": "10250",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress362": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "10250",
        "ToPort": "10250",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress363": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "16080",
        "ToPort": "16080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress364": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "16080",
        "ToPort": "16080",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress365": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8105",
        "ToPort": "8105",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress366": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "tcp",
        "FromPort": "8105",
        "ToPort": "8105",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress367": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress368": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress369": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress370": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress371": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress372": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress373": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress374": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "31000",
        "ToPort": "61000",
        "SourceSecurityGroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress375": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress376": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "49152",
        "ToPort": "65535",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress377": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "464",
        "ToPort": "464",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress378": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "1025",
        "ToPort": "5000",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "49152",
        "ToPort": "65535",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress380": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "389",
        "ToPort": "389",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress381": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress382": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "445",
        "ToPort": "445",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress383": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "25",
        "ToPort": "25",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress384": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "1025",
        "ToPort": "5000",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress385": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "139",
        "ToPort": "139",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress386": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "135",
        "ToPort": "135",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress387": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "3269",
        "ToPort": "3269",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress388": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress389": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "445",
        "ToPort": "445",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress390": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "138",
        "ToPort": "138",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress391": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "464",
        "ToPort": "464",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress392": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "5722",
        "ToPort": "5722",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress393": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "389",
        "ToPort": "389",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress394": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "2535",
        "ToPort": "2535",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress395": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "123",
        "ToPort": "123",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress396": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "9389",
        "ToPort": "9389",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress397": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "3268",
        "ToPort": "3268",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress398": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "88",
        "ToPort": "88",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress399": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "137",
        "ToPort": "137",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress400": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "tcp",
        "FromPort": "636",
        "ToPort": "636",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress401": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "67",
        "ToPort": "67",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress402": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "udp",
        "FromPort": "88",
        "ToPort": "88",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress403": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress404": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress405": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress406": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress407": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress408": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress409": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress410": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress411": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "SourceSecurityGroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress412": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "SourceSecurityGroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress413": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress414": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.227/32"
      }
    },
    "ingress415": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress416": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.193.32.0/19"
      }
    },
    "ingress417": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress418": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.255.180.0/24"
      }
    },
    "ingress419": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "10.255.183.0/24"
      }
    },
    "ingress420": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress421": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.193/32"
      }
    },
    "ingress422": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.76/32"
      }
    },
    "ingress423": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.32.232/32"
      }
    },
    "ingress424": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.227/32"
      }
    },
    "ingress425": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "202.168.209.204/32"
      }
    },
    "ingress426": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.201/32"
      }
    },
    "ingress427": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.222/32"
      }
    },
    "ingress428": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "64.106.131.160/28"
      }
    },
    "ingress429": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.125/32"
      }
    },
    "ingress430": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.126/32"
      }
    },
    "ingress431": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.192.11.39/32"
      }
    },
    "ingress432": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress433": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "udp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "10.192.12.21/32"
      }
    },
    "ingress434": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "udp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "52.1.119.157/32"
      }
    },
    "ingress435": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "udp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "54.209.239.124/32"
      }
    },
    "ingress436": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "10.192.11.103/32"
      }
    },
    "ingress437": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "10.192.12.21/32"
      }
    },
    "ingress438": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "54.209.239.124/32"
      }
    },
    "ingress439": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.12.21/32"
      }
    },
    "ingress440": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "54.209.239.124/32"
      }
    },
    "ingress441": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "SourceSecurityGroupId": "sg-a57498da",
        "SourceSecurityGroupOwnerId": "907124906847"
      }
    },
    "ingress442": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "SourceSecurityGroupId": {
          "Ref": "sgSASPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress444": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress445": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.45.0/24"
      }
    },
    "ingress446": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.50.0/24"
      }
    },
    "ingress447": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.53.0/24"
      }
    },
    "ingress448": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress449": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress450": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16020",
        "ToPort": "16020",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress451": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16020",
        "ToPort": "16020",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress452": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16010",
        "ToPort": "16010",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress453": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16010",
        "ToPort": "16010",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress454": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16000",
        "ToPort": "16000",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress455": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16000",
        "ToPort": "16000",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress456": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceServiceAccess"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress457": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9090",
        "ToPort": "9090",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress458": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9090",
        "ToPort": "9090",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress459": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8085",
        "ToPort": "8085",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress460": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8085",
        "ToPort": "8085",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress461": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress462": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress463": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9095",
        "ToPort": "9095",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress464": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9095",
        "ToPort": "9095",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress465": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress466": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress467": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8042",
        "ToPort": "8042",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress468": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8042",
        "ToPort": "8042",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress469": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgSASPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress470": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress471": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress472": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.33.101/32"
      }
    },
    "ingress473": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.34.101/32"
      }
    },
    "ingress474": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.53.101/32"
      }
    },
    "ingress475": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress476": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress477": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress478": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8070",
        "ToPort": "8070",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress479": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8070",
        "ToPort": "8070",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress480": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16030",
        "ToPort": "16030",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress481": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16030",
        "ToPort": "16030",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress482": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "udp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress483": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "udp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress484": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress485": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress486": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAMZASEDHD01SG"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress487": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAMZASEDHD01SG"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress488": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "49152",
        "ToPort": "65535",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress489": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "464",
        "ToPort": "464",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress490": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "1025",
        "ToPort": "5000",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress491": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "49152",
        "ToPort": "65535",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress492": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "389",
        "ToPort": "389",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress493": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress494": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "445",
        "ToPort": "445",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress495": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.192.11.39/32"
      }
    },
    "ingress496": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "64.106.131.250/32"
      }
    },
    "ingress497": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "25",
        "ToPort": "25",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress498": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "1025",
        "ToPort": "5000",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress499": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "139",
        "ToPort": "139",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress500": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "135",
        "ToPort": "135",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress501": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "3269",
        "ToPort": "3269",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress502": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress503": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "445",
        "ToPort": "445",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress504": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "138",
        "ToPort": "138",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress505": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "464",
        "ToPort": "464",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress506": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "5722",
        "ToPort": "5722",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress507": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "389",
        "ToPort": "389",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress508": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "2535",
        "ToPort": "2535",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress509": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "123",
        "ToPort": "123",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress510": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "9389",
        "ToPort": "9389",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress511": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "3268",
        "ToPort": "3268",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress512": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "88",
        "ToPort": "88",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress513": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "137",
        "ToPort": "137",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress514": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "tcp",
        "FromPort": "636",
        "ToPort": "636",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress515": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "67",
        "ToPort": "67",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress516": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "udp",
        "FromPort": "88",
        "ToPort": "88",
        "CidrIp": "10.192.16.11/32"
      }
    },
    "ingress517": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.193/32"
      }
    },
    "ingress518": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.32.232/32"
      }
    },
    "ingress519": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress520": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.227/32"
      }
    },
    "ingress521": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress522": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "10.192.11.103/32"
      }
    },
    "ingress523": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "161",
        "ToPort": "162",
        "CidrIp": "52.1.119.157/32"
      }
    },
    "ingress524": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "10.192.11.103/32"
      }
    },
    "ingress525": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "202.168.209.204/32"
      }
    },
    "ingress526": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.201/32"
      }
    },
    "ingress527": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.222/32"
      }
    },
    "ingress528": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "52.1.119.157/32"
      }
    },
    "ingress529": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "64.106.131.160/28"
      }
    },
    "ingress530": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.125/32"
      }
    },
    "ingress531": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.126/32"
      }
    },
    "ingress532": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.192.11.103/32"
      }
    },
    "ingress533": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.192.11.39/32"
      }
    },
    "ingress534": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress536": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress537": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress538": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "SourceSecurityGroupId": {
          "Ref": "sgKTQAECSSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress539": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress540": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress541": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8090",
        "ToPort": "8090",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress542": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress543": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress544": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress545": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress546": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress547": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress548": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress549": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress550": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "31000",
        "ToPort": "61000",
        "SourceSecurityGroupId": {
          "Ref": "sgECSRFQASG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress551": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress552": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "udp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress553": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "udp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress554": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress555": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQAALBSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress556": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16020",
        "ToPort": "16020",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress557": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16020",
        "ToPort": "16020",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress558": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16010",
        "ToPort": "16010",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress559": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16010",
        "ToPort": "16010",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress560": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16000",
        "ToPort": "16000",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress561": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16000",
        "ToPort": "16000",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress562": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceServiceAccess"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress563": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9090",
        "ToPort": "9090",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress564": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9090",
        "ToPort": "9090",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress565": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8085",
        "ToPort": "8085",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress566": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8085",
        "ToPort": "8085",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress567": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress568": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress569": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9095",
        "ToPort": "9095",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress570": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "9095",
        "ToPort": "9095",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress571": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress572": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress573": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8042",
        "ToPort": "8042",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress574": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8042",
        "ToPort": "8042",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress575": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgSASPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress576": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress577": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress578": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.12.21/32"
      }
    },
    "ingress579": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.33.101/32"
      }
    },
    "ingress580": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.34.101/32"
      }
    },
    "ingress581": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.53.101/32"
      }
    },
    "ingress582": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress583": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress584": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress585": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8070",
        "ToPort": "8070",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress586": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "8070",
        "ToPort": "8070",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress587": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16030",
        "ToPort": "16030",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress588": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "tcp",
        "FromPort": "16030",
        "ToPort": "16030",
        "CidrIp": "172.16.0.0/16"
      }
    },
    "ingress589": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "udp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress590": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "udp",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress591": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress592": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress593": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress594": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress595": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress596": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress597": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress598": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress599": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress600": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5000",
        "ToPort": "5000",
        "SourceSecurityGroupId": {
          "Ref": "sgECSPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress601": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5000",
        "ToPort": "5000",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress602": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5000",
        "ToPort": "5000",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress603": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5000",
        "ToPort": "5000",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress604": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress605": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress606": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress607": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "5000",
        "ToPort": "5000",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress608": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "5000",
        "ToPort": "5000",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress609": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "udp",
        "FromPort": "5000",
        "ToPort": "5000",
        "CidrIp": "172.30.26.51/32"
      }
    },
    "ingress610": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress611": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMySQLSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress612": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMySQLSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress613": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.193/32"
      }
    },
    "ingress614": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.11.76/32"
      }
    },
    "ingress615": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.193.32.232/32"
      }
    },
    "ingress616": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.227/32"
      }
    },
    "ingress617": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "202.168.209.204/32"
      }
    },
    "ingress618": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.201/32"
      }
    },
    "ingress619": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "217.72.241.222/32"
      }
    },
    "ingress620": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "64.106.131.160/28"
      }
    },
    "ingress621": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.125/32"
      }
    },
    "ingress622": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "66.70.123.126/32"
      }
    },
    "ingress623": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.192.11.39/32"
      }
    },
    "ingress624": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "ingress625": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "10021",
        "ToPort": "11099",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress626": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "10021",
        "ToPort": "11099",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress627": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "10021",
        "ToPort": "11099",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress628": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "21050",
        "ToPort": "21050",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress629": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "21050",
        "ToPort": "21050",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress630": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "21050",
        "ToPort": "21050",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress631": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5901",
        "ToPort": "5902",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress632": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5901",
        "ToPort": "5902",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress633": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5901",
        "ToPort": "5902",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress634": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6969",
        "ToPort": "7080",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress635": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6969",
        "ToPort": "7080",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress636": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6969",
        "ToPort": "7080",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress637": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8343",
        "ToPort": "8821",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress638": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8343",
        "ToPort": "8821",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress639": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8343",
        "ToPort": "8821",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress640": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9360",
        "ToPort": "9452",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress641": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9360",
        "ToPort": "9452",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress642": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9360",
        "ToPort": "9452",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress643": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7443",
        "ToPort": "7572",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress644": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7443",
        "ToPort": "7572",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress645": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7443",
        "ToPort": "7572",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress646": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress647": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress648": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "udp",
        "FromPort": "8561",
        "ToPort": "8561",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress649": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "udp",
        "FromPort": "8561",
        "ToPort": "8561",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress650": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7980",
        "ToPort": "8111",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress651": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7980",
        "ToPort": "8111",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress652": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "7980",
        "ToPort": "8111",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress653": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgSASDEVSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress654": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "8561",
        "ToPort": "8561",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress655": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress656": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress657": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress658": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5660",
        "ToPort": "5660",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress659": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5660",
        "ToPort": "5660",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress660": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5660",
        "ToPort": "5660",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress661": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6051",
        "ToPort": "6051",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress662": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6051",
        "ToPort": "6051",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress663": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6051",
        "ToPort": "6051",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress664": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6001",
        "ToPort": "6002",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress665": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6001",
        "ToPort": "6002",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress666": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "6001",
        "ToPort": "6002",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress667": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5451",
        "ToPort": "5451",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress668": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5451",
        "ToPort": "5451",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress669": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5451",
        "ToPort": "5451",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress670": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9832",
        "ToPort": "9832",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "ingress671": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9832",
        "ToPort": "9832",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress672": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9832",
        "ToPort": "9832",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress673": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgELASTICQASG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress674": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress675": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress676": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress677": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5601",
        "ToPort": "5601",
        "CidrIp": "10.0.0.0/8"
      }
    },
    "ingress678": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5601",
        "ToPort": "5601",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress679": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "5601",
        "ToPort": "5601",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress680": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9300",
        "ToPort": "9300",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress681": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9300",
        "ToPort": "9300",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress682": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress683": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9200",
        "ToPort": "9200",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress684": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "tcp",
        "FromPort": "9200",
        "ToPort": "9200",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress685": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "SourceSecurityGroupId": "sg-a57498da",
        "SourceSecurityGroupOwnerId": "907124906847"
      }
    },
    "ingress686": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "SourceSecurityGroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress687": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "SourceSecurityGroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "SourceSecurityGroupOwnerId": "869052972610"
      }
    },
    "ingress688": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.192.11.196/32"
      }
    },
    "ingress689": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.192.11.85/32"
      }
    },
    "ingress690": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.34.0/24"
      }
    },
    "ingress691": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.38.0/24"
      }
    },
    "ingress692": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.193.42.0/24"
      }
    },
    "ingress693": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "10.255.0.0/16"
      }
    },
    "ingress694": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "172.16.0.0/12"
      }
    },
    "ingress695": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsaspocsg1"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.160.0.0/16"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAECSSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgpocWebServerSecurityGroup2BCU7H97T6KM"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress5": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "2222",
        "ToPort": "2222",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress7": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress8": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "egress9": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "egress10": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress11": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "5670",
        "ToPort": "5670",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress12": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "5439",
        "ToPort": "5439",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress13": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "2224",
        "ToPort": "2224",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress14": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "1521",
        "ToPort": "1521",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress15": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "egress16": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "7777",
        "ToPort": "7777",
        "CidrIp": "10.192.11.120/32"
      }
    },
    "egress17": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress18": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSInfrastructure"
        },
        "IpProtocol": "tcp",
        "FromPort": "8081",
        "ToPort": "8081",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress19": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress20": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7EC2"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress21": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDEVEDHTCORSHIFTSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress22": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNexposeScanEngine"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress23": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTABLEAUNONPROD"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress24": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHNONPRODQAORA"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress25": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG1"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress26": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgFWValidation"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress27": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "egress28": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "-1",
        "CidrIp": "64.27.68.72/32"
      }
    },
    "egress29": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "-1",
        "CidrIp": "64.27.68.73/32"
      }
    },
    "egress30": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "-1",
        "CidrIp": "64.27.68.74/32"
      }
    },
    "egress31": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress32": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress33": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMGMTEM7"
        },
        "IpProtocol": "udp",
        "FromPort": "123",
        "ToPort": "123",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress34": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDatapipeAdminSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress35": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVALBSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress36": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNexposescanEngine"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress37": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTurbonomicPOC"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress38": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress39": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRSTRIIMPOCSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress40": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTDEVECSSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress41": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTA"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress42": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress43": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "-1",
        "CidrIp": "204.110.218.96/27"
      }
    },
    "egress44": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "-1",
        "CidrIp": "204.110.219.96/27"
      }
    },
    "egress45": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress46": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress47": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "udp",
        "FromPort": "123",
        "ToPort": "123",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress48": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress49": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSIDS"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress50": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress51": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICDEVSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress52": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSTRIIMPOCEC2SG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress53": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDevelopers"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress54": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODTESTORA"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress55": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASPOCSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress56": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgBrocade5400VirtualRouterFirewallVPNVSE67R11S3AutogenByAWSMP"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress57": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEMRAccess"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress58": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgVYATTAMGMTVPC"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress59": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgGOLDENSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress60": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODQAORA"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress61": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication1"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress62": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSGCHG0114418"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress63": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress64": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication3"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress65": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgktdev"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress66": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgTCONONPRODORA"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress67": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "5670",
        "ToPort": "5670",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress68": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress69": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "2224",
        "ToPort": "2224",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress70": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress71": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "7777",
        "ToPort": "7777",
        "CidrIp": "10.192.11.120/32"
      }
    },
    "egress72": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "2222",
        "ToPort": "2222",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress73": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress74": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress75": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "egress76": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress77": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "8081",
        "ToPort": "8081",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress78": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAllowMGTEM7"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress79": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOQAREDSHIFT"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress80": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceServiceAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "DestinationSecurityGroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        }
      }
    },
    "egress81": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceServiceAccess"
        },
        "IpProtocol": "tcp",
        "FromPort": "8443",
        "ToPort": "8443",
        "DestinationSecurityGroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        }
      }
    },
    "egress82": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceSlavePrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress83": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFDEVALBSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress84": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAMZASEDHD01SG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress85": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgActiveDirectoryCommunication2"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress86": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "5670",
        "ToPort": "5670",
        "CidrIp": "209.18.64.140/32"
      }
    },
    "egress87": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress88": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "2224",
        "ToPort": "2224",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress89": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "64.106.131.160/28"
      }
    },
    "egress90": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "7777",
        "ToPort": "7777",
        "CidrIp": "10.192.11.120/32"
      }
    },
    "egress91": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "2222",
        "ToPort": "2222",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress92": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress93": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress94": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "egress95": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress96": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "8081",
        "ToPort": "8081",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress97": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgKTQAALBSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress98": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress99": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQASG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress100": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSRFQAALBSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress101": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgElasticMapReduceMasterPrivate"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress102": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgECSPOCSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress103": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNexposeScanEngine"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress104": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress105": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMySQLSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress106": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "5670",
        "ToPort": "5670",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress107": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress108": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "2224",
        "ToPort": "2224",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress109": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "52311",
        "ToPort": "52311",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress110": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "7777",
        "ToPort": "7777",
        "CidrIp": "10.192.11.120/32"
      }
    },
    "egress111": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "2222",
        "ToPort": "2222",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress112": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "udp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress113": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress114": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "10.192.0.0/15"
      }
    },
    "egress115": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress116": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDPMSSProtectedHosts"
        },
        "IpProtocol": "tcp",
        "FromPort": "8081",
        "ToPort": "8081",
        "CidrIp": "64.106.194.103/32"
      }
    },
    "egress117": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSASDEVSG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress118": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgELASTICQASG"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress119": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgEDHTCOTESTREDSHIFT"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress120": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsaspocsg1"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "croute1": {
      "Type": "AWS::EC2::VPNConnectionRoute",
      "Properties": {
        "VpnConnectionId": {
          "Ref": "vpn6eb0a00f"
        },
        "DestinationCidrBlock": "10.0.0.0/8"
      }
    },
    "croute2": {
      "Type": "AWS::EC2::VPNConnectionRoute",
      "Properties": {
        "VpnConnectionId": {
          "Ref": "vpn6eb0a00f"
        },
        "DestinationCidrBlock": "10.193.124.0/24"
      }
    },
    "croute3": {
      "Type": "AWS::EC2::VPNConnectionRoute",
      "Properties": {
        "VpnConnectionId": {
          "Ref": "vpn898b9be8"
        },
        "DestinationCidrBlock": "10.193.124.0/24"
      }
    },
    "croute4": {
      "Type": "AWS::EC2::VPNConnectionRoute",
      "Properties": {
        "VpnConnectionId": {
          "Ref": "vpn898b9be8"
        },
        "DestinationCidrBlock": "10.1.89.0/24"
      }
    }
  },
  "Description": ""
}